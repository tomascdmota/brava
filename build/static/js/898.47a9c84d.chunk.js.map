{"version":3,"file":"static/js/898.47a9c84d.chunk.js","mappings":"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","sources":["pages/Card/CardComponent/NotesModal/NoteModal.js","components/Modal/Modal.js","pages/Card/CardComponent/CardComponent.js","pages/Dashboard/CreateCard/uploadModal/UploadModal.js","pages/Dashboard/CreateCard/CreateCard.js"],"sourcesContent":["import React from 'react';\r\nimport './NoteModal.scss';\r\nimport axios from 'axios';\r\n\r\nconst NoteModal = ({ isOpen, closeModal, notes, background_image, loading, profile_image_url }) => {\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className=\"note-modal\">\r\n          <div className=\"note-modal-background\" onClick={closeModal}></div>\r\n          <div className=\"note-modal-content\">\r\n            <button className=\"modal-close\" onClick={closeModal}>X</button> {/* Close button */}\r\n            <div className=\"note-card-component-header\">\r\n              {loading ? (\r\n                <p>Loading...</p>\r\n              ) : (\r\n                <>\r\n                  <img className=\"note-card-image\" rel='preload' loading=\"lazy\" src={profile_image_url || 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/brava.jpg?v=1713204195'} alt=\"Profile\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"note-box\">\r\n              <img src={background_image}/>\r\n              <h1>Extra Information</h1>\r\n              <p>{notes}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteModal;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './Modal.css'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst Modal = ({ isOpen, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    company: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const {id: userId} = useParams()\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  axios.post(`https://${process.env.REACT_APP_HOST}/api/${userId}/message`, formData)\r\n  .then((res) => {\r\n    console.log('Response Headers:', res.headers);\r\n    if (res.status === 200) {\r\n      alert(\"Message sent successfully\");\r\n      setFormData({\r\n        name: '',\r\n        company: '',\r\n        email: '',\r\n        message: ''\r\n      });\r\n    }\r\n  })\r\n  .catch((err) => {\r\n    console.log(err.response.status);\r\n    console.log(err);\r\n  });\r\n\r\n\r\n    // Add your logic to handle form submission\r\n    console.log('Form submitted:', formData);\r\n    onClose(); // Close the modal after submission\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={onClose}>\r\n              X\r\n            </button>\r\n            <h2>GET IN TOUCH</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder='Name'\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n               <label htmlFor=\"company\">Company:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"company\"\r\n                name=\"company\"\r\n                placeholder='Company'\r\n                value={formData.company}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"message\">Message:</label>\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                placeholder='What would you like to say?'\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { S3, GetObjectCommand } from '@aws-sdk/client-s3';\r\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\r\nimport vcf from 'vcf';\r\nimport { openDB } from 'idb';\r\nimport unorm from 'unorm';\r\nimport NoteModal from './NotesModal/NoteModal';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport GoogleReviewsLogo from './Logos/googlereview.png';\r\nimport './CardComponent.css';\r\n\r\n\r\nconst  FacebookLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-facebook.svg?v=1712083465';\r\nconst InstagramLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-instagram.svg?v=1712083465';\r\nconst LinkedInLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-linkedin.svg?v=1712083465';\r\nconst UrlLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/url.png?v=1712083467';\r\nconst MapsLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-google-maps-old.svg?v=1712083465';\r\nconst YouTubeLogo = \"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-youtube.svg?v=1712083465\";\r\nconst PaypalLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-paypal.svg?v=1712083465'\r\nconst TiktokLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/tiktok.png?v=1713213933'\r\nconst TwitterLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-twitterx.svg?v=1712083465'\r\nconst SpotifyLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/spotify.png?v=1712083467'\r\nconst VintedLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/vinted.jpg?v=1712083466'\r\nconst NotesLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/notes.png?v=1713213932'\r\nconst StandvirtualLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/standvirtual.png?v=1713213933'\r\nconst OlxLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/olx.png?v=1713213932'\r\nconst PiscapiscaLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/piscapisca.png?v=1713213932'\r\nconst CustojustoLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/custojusto.png?v=1713213932'\r\n\r\n\r\n\r\nfunction CardComponent({\r\n  card_id,\r\n  id,\r\n  email,\r\n  username,\r\n  phone,\r\n  company,\r\n  title,\r\n  profile_image_url,\r\n  background_image_url,\r\n  onLoad,\r\n  facebook,\r\n  linkedin,\r\n  instagram,\r\n  google_reviews,\r\n  address,\r\n  youtube,\r\n  notes,\r\n  url,\r\n  paypal,\r\n  tiktok,\r\n  twitter,\r\n  spotify,\r\n  vinted,\r\n  standvirtual,\r\n  olx,\r\n  piscapisca,\r\n  custojusto\r\n}) {\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  \r\n  const [isNotesOpen, setIsNotesOpen] = useState(false);\r\n  console.log(isNotesOpen)\r\n  const accessKeyId = process.env.REACT_APP_AWS_ACCESS_KEY_ID;\r\n  const secretAccessKey =  process.env.REACT_APP_AWS_SECRET_ACCESS_KEY;\r\n  const Region =  process.env.REACT_APP_S3_REGION;\r\n  const Bucket =  process.env.REACT_APP_BUCKET;\r\n  let mapsUrl;\r\n\r\n  useEffect(() => {\r\n  \r\n    let isMounted = true;\r\n  \r\n    const loadImageAndSetState = async () => {\r\n  \r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n  \r\n      if (isMounted) {\r\n        if (imageBuffer) {\r\n          const blob = new Blob([imageBuffer], { type: 'image/jpg' });\r\n          setImage(blob);\r\n          setLoading(false);\r\n        } else {\r\n          fetchImage();\r\n        }\r\n      }\r\n    };\r\n  \r\n    loadImageAndSetState();\r\n  \r\n    return () => {\r\n      isMounted = false;\r\n  \r\n      if (image) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  \r\n \r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n    \r\n  };\r\n const handleOpenNotes = () => {\r\n  setIsNotesOpen(true);\r\n }\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n\r\n  const openGoogleMaps = () => {\r\n    // Construct the Google Maps URL with the address as a query parameter\r\n     mapsUrl = `https://www.google.com/maps/search/?api=1&query=${address}`;\r\n\r\n    // Open a new window or tab with the Google Maps URL\r\n    window.open(mapsUrl, '_blank');\r\n  };\r\n  const initIndexedDB = async () => {\r\n    try {\r\n      const db = await openDB('brava-db', 1, {\r\n        upgrade(db) {\r\n          if (!db.objectStoreNames.contains('images')) {\r\n            const imagesStore = db.createObjectStore('images', { keyPath: 'key' });\r\n            imagesStore.createIndex('url', 'url', { unique: true });\r\n          }\r\n        },\r\n      });\r\n      return db;\r\n    } catch (error) {\r\n      console.error('Error initializing IndexedDB:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const saveImageToIndexedDB = async (imageBlob) => {\r\n    try {\r\n      const db = await initIndexedDB();\r\n      const tx = db.transaction('images', 'readwrite');\r\n      const store = tx.objectStore('images');\r\n  \r\n      // Use a unique key, such as the S3 key, assuming it's unique for each image\r\n      const key = 'profileImage';\r\n      \r\n      // Create an object with a URL (if needed) and the image data\r\n      const data = {\r\n        key,\r\n        url: profile_image_url,  // Add the URL if it's necessary for your use case\r\n        data: imageBlob,\r\n      };\r\n  \r\n      // Store the data in IndexedDB\r\n      store.put(data);\r\n  \r\n      // Complete the transaction\r\n      await tx.complete;\r\n      \r\n      console.log('Image stored in IndexedDB:', data);\r\n    } catch (error) {\r\n      console.error('Error storing image in IndexedDB:', error);\r\n    }\r\n  };\r\n\r\n  const loadImageFromIndexedDB = async () => {\r\n    try {\r\n      const db = await initIndexedDB();\r\n      const tx = db.transaction('images');\r\n      const store = tx.objectStore('images');\r\n      const entry = await store.get('profileImage');\r\n  \r\n      return entry ? entry.data : null;\r\n    } catch (error) {\r\n      console.error('Error loading from IndexedDB:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchImage = async () => {\r\n    try {\r\n      const s3Client = new S3({\r\n        credentials: {\r\n          accessKeyId,\r\n          secretAccessKey,\r\n        },\r\n        region: Region,\r\n      });\r\n  \r\n      // Parse the profile_image_url to extract the S3 key\r\n      const urlObject = new URL(profile_image_url);\r\n      const key = decodeURIComponent(urlObject.pathname.replace(/^\\//, ''));\r\n  \r\n      const getObjectParams = {\r\n        Bucket,\r\n        Key: key,\r\n      };\r\n  \r\n      const command = new GetObjectCommand(getObjectParams);\r\n      const response = await s3Client.send(command);\r\n  \r\n     \r\n  \r\n      const blob = new Blob([response.Body], { type: response.ContentType });\r\n      saveImageToIndexedDB(blob);\r\n      // Save the image Blob directly to the state\r\n      setImage(blob);\r\n      setLoading(false);\r\n  \r\n      if (onLoad) {\r\n        onLoad();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching image:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const loadImageAndSetState = async () => {\r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n\r\n      if (imageBuffer) {\r\n        const blob = new Blob([imageBuffer], { type: 'image/jpg' });\r\n        setImage(blob);\r\n        setLoading(false);\r\n      } else {\r\n        fetchImage();\r\n      }\r\n    };\r\n\r\n    loadImageAndSetState();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n\r\n      if (image) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [profile_image_url, Bucket, Region, accessKeyId, secretAccessKey, onLoad]);\r\n\r\n\r\n\r\n  const saveToContacts = async () => {\r\n    try {\r\n      const card = new vcf();\r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n  \r\n      if (!imageBuffer) {\r\n        console.error('Image not found in IndexedDB.');\r\n        return;\r\n      }\r\n  \r\n      // Set basic properties\r\n  \r\n      // Manually encode special characters in the names\r\n      const removeDiacritics = (str) => unorm.nfkd(str).replace(/[\\u0300-\\u036f]/g, '');\r\n      const decodedUsername = removeDiacritics(decodeURIComponent(username));\r\n      const decodedTitle = removeDiacritics(decodeURIComponent(title));\r\n      const decodedNotes = removeDiacritics(decodeURIComponent(notes))\r\n      const decodedAddress = removeDiacritics(decodeURIComponent(address))\r\n      // Set structured name with properly encoded values\r\n      card.add('n', [decodedUsername]);\r\n  \r\n      // Set formatted name with the full, properly encoded name\r\n      card.add('fn', [decodedUsername]);\r\n  \r\n      card.add('org', company);\r\n      card.add('tel', phone);\r\n      card.add('email', email);\r\n  \r\n      // Set additional properties\r\n      card.add('title', [decodedTitle]);\r\n      card.add('url', `https://app.bravanfc.com/${id}/cards/${card_id}`);\r\n  \r\n      // Set social media properties\r\n      if (facebook) {\r\n        card.add('x-socialprofile', facebook, { type: 'Facebook' });\r\n      }\r\n      if (instagram) {\r\n        card.add('x-socialprofile', instagram, { type: 'Instagram' });\r\n      }\r\n      if (linkedin) {\r\n        card.add('x-socialprofile', linkedin, { type: 'Linkedin' });\r\n      }\r\n      if (youtube) {\r\n        card.add('x-socialprofile', youtube, { type: 'Youtube' });\r\n      }\r\n      if(notes) {\r\n        card.add('note', [decodedNotes])\r\n      }\r\n      if(twitter){\r\n        card.add('x-socialprofile', twitter, {type: 'Twitter'});\r\n      }\r\n      if(paypal){\r\n        card.add('x-socialprofile', paypal, {type: \"Paypal\"});\r\n      }\r\n      if(tiktok){\r\n        card.add('x-socialprofile', tiktok, {type: \"TikTok\"});\r\n      }\r\n      if(spotify){\r\n        card.add('x-socialprofile', spotify, {type: \"Spotify\"});\r\n      }\r\n      if(vinted){\r\n        card.add('x-socialprofile', vinted, {type: \"Vinted\"});\r\n      }\r\n      if(olx){\r\n        card.add('x-social-profile', olx ,{type:\"Olx\"});\r\n      }\r\n      if(standvirtual){\r\n        card.add('x-social-profile', standvirtual ,{type:\"standvirtual\"});\r\n      }\r\n      if(piscapisca){\r\n        card.add('x-social-profile', piscapisca ,{type:\"piscapisca\"});\r\n      }\r\n      if(custojusto){\r\n        card.add('x-social-profile', custojusto ,{type:\"custojusto\"});\r\n      }\r\n  \r\n  \r\n      // Set address\r\n      card.add('adr', [decodedAddress]);\r\n\r\n      // Extract the S3 key from the profile_image_url\r\n      const urlObject = new URL(profile_image_url);\r\n      const imageKey = decodeURIComponent(urlObject.pathname.replace(/^\\//, ''));\r\n  \r\n      // Generate a pre-signed URL for the image\r\n      const imageURL = await generatePresignedURL(imageKey);\r\n  \r\n      const encodedImage = await fetchAndEncodeImage(imageURL);\r\n      if (!encodedImage) {\r\n        console.error('Error fetching and encoding image.');\r\n        return;\r\n      }\r\n  \r\n      // Set image in vCard\r\n      card.add('photo', encodedImage, { encoding: 'b', type: 'image/jpeg' });\r\n  \r\n      // Generate vCard data as a string\r\n      const vCardData = card.toString('3.0');\r\n      console.log(vCardData);\r\n  \r\n      // Create a Blob from the vCard data with explicit UTF-8 encoding\r\n      const vcard_blob = new Blob([new TextEncoder().encode(vCardData)], {\r\n        type: 'text/vcard;charset=utf-8',\r\n      });\r\n  \r\n      // Open a new URL to prompt the user to add the contact\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = URL.createObjectURL(vcard_blob);\r\n      downloadLink.download = 'contact.vcf';\r\n  \r\n      // Trigger a click event to simulate a download prompt\r\n       // Redirect the user to the vCard file\r\n    window.location.href = URL.createObjectURL(vcard_blob);\r\n\r\n    // Release the object URL\r\n    URL.revokeObjectURL(vcard_blob);\r\n    } catch (error) {\r\n      console.error('Error saving to contacts:', error);\r\n    }\r\n  };\r\n  \r\n  // Function to fetch and encode the image\r\n  const fetchAndEncodeImage = async (imageUrl) => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const imageBlob = await response.blob();\r\n  \r\n      // Resize and compress the image with a lower quality\r\n      const resizedAndCompressedBase64 = await resizeAndCompressImage(imageBlob, {\r\n        maxWidth: 800,\r\n        maxHeight: 800,\r\n        quality: 0.9, // Adjust the quality as needed\r\n      });\r\n  \r\n      return resizedAndCompressedBase64;\r\n    } catch (error) {\r\n      console.error('Error fetching, resizing, and encoding image:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const resizeAndCompressImage = async (blob, options) => {\r\n    try {\r\n      const image = new Image();\r\n      image.src = URL.createObjectURL(blob);\r\n  \r\n      await new Promise((resolve, reject) => {\r\n        image.onload = resolve;\r\n        image.onerror = reject;\r\n      });\r\n  \r\n      const { maxWidth, maxHeight, quality } = options;\r\n  \r\n      let width = image.width;\r\n      let height = image.height;\r\n  \r\n      if (width > height) {\r\n        if (width > maxWidth) {\r\n          height *= maxWidth / width;\r\n          width = maxWidth;\r\n        }\r\n      } else {\r\n        if (height > maxHeight) {\r\n          width *= maxHeight / height;\r\n          height = maxHeight;\r\n        }\r\n      }\r\n  \r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const context = canvas.getContext('2d');\r\n  \r\n      // Draw the image on the canvas progressively\r\n      context.drawImage(image, 0, 0, width, height);\r\n  \r\n      // Convert the canvas content to a blob\r\n      const resizedBlob = await new Promise((resolve) => {\r\n        canvas.toBlob(resolve, 'image/jpeg', quality);\r\n      });\r\n  \r\n      // Convert the resized blob to base64\r\n      const resizedBlobBuffer = await new Response(resizedBlob).arrayBuffer();\r\n      const resizedBlobBase64 = btoa(\r\n        new Uint8Array(resizedBlobBuffer).reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n      );\r\n  \r\n      return resizedBlobBase64;\r\n    } catch (error) {\r\n      console.error('Error resizing and compressing image:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  const generatePresignedURL = async (imageKey) => {\r\n    try {\r\n      const s3Client = new S3({\r\n        region: 'eu-west-2',\r\n        credentials: {\r\n          accessKeyId: accessKeyId,\r\n          secretAccessKey: secretAccessKey,\r\n        },\r\n      });\r\n  \r\n      const params = {\r\n        Bucket: 'brava-bucket',\r\n        Key: imageKey,\r\n        Expires: 900,\r\n      };\r\n  \r\n      const signedURL =  getSignedUrl(s3Client, new GetObjectCommand(params));\r\n      console.log(signedURL)\r\n      return signedURL;\r\n    } catch (error) {\r\n      console.error('Error generating pre-signed URL:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  const handleCloseNotes = () => {\r\n    setIsNotesOpen(false); // Set the state to close the modal\r\n  };\r\n\r\n\r\n  const handleGetInTouch = () => {\r\n    try {\r\n      // Instead of triggering a download, open the modal\r\n      openModal();\r\n    } catch (error) {\r\n      console.error('Error opening modal:', error);\r\n    }\r\n  };\r\n  return (\r\n    <div className={`card-component ${loading ? 'loading' : ''}`}>\r\n      <div className=\"card-background\" style={{ backgroundImage: `url(${background_image_url|| 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/brava_Front4-removebg-preview.png?v=1712164655'})` }}></div>\r\n      <div className=\"card-component-header\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <>\r\n           <img className=\"card-image\" rel='preload' loading=\"lazy\" src={profile_image_url || 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/brava.jpg?v=1713204195'} alt=\"Profile\" />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5>{title}</h5>\r\n        <h3><span>{company}</span></h3>\r\n        <p>{username}</p>\r\n        <div className=\"card-buttons\">\r\n          <button onClick={saveToContacts}>SAVE CONTACT</button>\r\n        <button className=\"fab\" onClick={handleGetInTouch}>\r\n          EXCHANGE CONTACT\r\n        </button>\r\n        </div>\r\n        <div className=\"social-icons\">\r\n          {url && <a href={url}><img rel='preload' className=\"url\" loading=\"lazy\" src={UrlLogo} alt=\"Url\" focusable /></a>}\r\n          {google_reviews && <a href={google_reviews}><img rel='preload' loading=\"lazy\" src={GoogleReviewsLogo} alt=\"Instagram\" focusable /></a>}\r\n          {instagram && <a href={instagram}><img rel='preload' loading=\"lazy\"src={InstagramLogo} alt=\"Instagram\" focusable /></a>}\r\n          {facebook && <a href={facebook}><img rel='preload' loading=\"lazy\"src={FacebookLogo} alt=\"Facebook\" focusable /></a>}\r\n          {linkedin && <a href={linkedin}><img rel='preload' loading=\"lazy\"src={LinkedInLogo} alt=\"LinkedIn\" focusable /></a>}\r\n          {youtube && <a href={youtube}><img rel='preload' loading=\"lazy\"src={YouTubeLogo} alt=\"YouTube\" focusable /></a>}\r\n          {paypal &&<a href={paypal}><img rel='preload' loading=\"lazy\"src={PaypalLogo} alt=\"Paypal\" focusable /></a>}\r\n          {twitter &&<a href={twitter}><img rel='preload' loading=\"lazy\"src={TwitterLogo} alt=\"Twitter\" focusable /></a>}\r\n          {tiktok &&<a href={tiktok}><img rel='preload' loading=\"lazy\"src={TiktokLogo} alt=\"TikTok\" focusable /></a>}\r\n          {spotify &&<a  href={spotify}><img rel='preload' className='spotify' loading=\"lazy\"src={SpotifyLogo} alt=\"Spotify\" focusable /></a>}\r\n          {vinted &&<a  href={vinted}><img rel='preload' className='spotify' loading=\"lazy\"src={VintedLogo} alt=\"Vinted\" focusable /></a>}\r\n          {notes && <a onClick={handleOpenNotes}><img rel='preload' loading=\"lazy\"style={{marginBottom: \"10px\"}} src={NotesLogo} alt=\"Notes\" focusable /></a>}\r\n          {address && <a href={mapsUrl} onClick={openGoogleMaps}><img rel='preload' loading='lazy' src={MapsLogo} alt='Maps' focusable/></a>}\r\n          {standvirtual && <a href={standvirtual} ><img rel='preload' loading='lazy' src={StandvirtualLogo} alt='standvirtual' focusable/></a>}\r\n          {olx && <a href={olx} ><img rel='preload' loading='lazy' src={OlxLogo} alt='olx' focusable/></a>}\r\n          {piscapisca && <a href={piscapisca} ><img rel='preload' loading='lazy' src={PiscapiscaLogo} alt='piscapisca' focusable/></a>}\r\n          {custojusto && <a href={custojusto} ><img rel='preload' loading='lazy' src={CustojustoLogo} alt='custojusto' focusable/></a>}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} />\r\n      <NoteModal isOpen={isNotesOpen} background_image={background_image_url} profile_image_url={profile_image_url} closeModal={handleCloseNotes} notes={notes} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nCardComponent.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n  company: PropTypes.string.isRequired,\r\n  profile_image_url: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  card_id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  facebook: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string.isRequired,\r\n  instagram: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CardComponent;","import React, { useState } from 'react';\r\nimport \"./UploadModal.scss\";\r\n\r\nconst UploadModal = ({ handleCloseModal }) => {\r\n  const [profilePictureLabel, setProfilePictureLabel] = useState('Upload Profile Picture');\r\n  const [backgroundImageLabel, setBackgroundImageLabel] = useState('Upload Background Image');\r\n\r\n  const handleImageChangeAndSave = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setProfilePictureLabel(file.name);\r\n      saveImageToLocalStorage(file, 'profileImageURL');\r\n    }\r\n  };\r\n  \r\n  const saveImageToLocalStorage = (file, localStorageKey) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      localStorage.setItem(localStorageKey, event.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  \r\n  \r\n  const handleImageChangesAndSave = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBackgroundImageLabel(file.name);\r\n      saveImageToLocalStorage(file, 'backgroundImageURL');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Reset old items in localStorage\r\n    localStorage.removeItem('profileImageUrl');\r\n    localStorage.removeItem('backgroundImageUrl');\r\n  \r\n    // Save new items to localStorage\r\n    const profilePictureFileInput = document.getElementById('profilePictureInput');\r\n    const backgroundImageFileInput = document.getElementById('backgroundImageInput');\r\n  \r\n    if (profilePictureFileInput && profilePictureFileInput.files.length > 0) {\r\n      const profilePictureFile = profilePictureFileInput.files[0];\r\n      localStorage.setItem('profileImageUrl', profilePictureFile.name); // Changed from 'profilePicture' to 'profileImageUrl'\r\n      console.log('Profile Picture saved to localStorage:', profilePictureFile.name);\r\n    }\r\n  \r\n    if (backgroundImageFileInput && backgroundImageFileInput.files.length > 0) {\r\n      const backgroundImageFile = backgroundImageFileInput.files[0];\r\n      localStorage.setItem('backgroundImageUrl', backgroundImageFile.name); // Changed from 'backgroundImage' to 'backgroundImageUrl'\r\n      console.log('Background Image saved to localStorage:', backgroundImageFile.name);\r\n    }\r\n  \r\n    handleCloseModal();\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"upload-modal\">\r\n      <button className=\"modal-close-button\" onClick={handleCloseModal}>\r\n        &times;\r\n      </button>\r\n      <h2 className=\"title\">Profile Picture</h2>\r\n      <h3 className=\"subtitle\">Upload your profile picture</h3>\r\n      <div className=\"profile-picture-container\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"profilePicture\"\r\n          id=\"profilePictureInput\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChangeAndSave}\r\n          className=\"file-input\"\r\n        />\r\n        <label htmlFor=\"profilePictureInput\" className=\"file-label\">\r\n          {profilePictureLabel}\r\n        </label>\r\n      </div>\r\n      <h2 className=\"title\">Background Image</h2>\r\n      <h3 className=\"subtitle\">Upload your background image</h3>\r\n      <div className=\"profile-picture-container\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"backgroundImage\"\r\n          id=\"backgroundImageInput\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChangesAndSave}\r\n          className=\"file-input\"\r\n        />\r\n        <label htmlFor=\"backgroundImageInput\" className=\"file-label\">\r\n          {backgroundImageLabel}\r\n        </label>\r\n      </div>\r\n      <input\r\n        type=\"button\"\r\n        name=\"submit\"\r\n        className=\"submit action-button\"\r\n        value=\"Submit\"\r\n        onClick={handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import React, { useState, useEffect , useMemo} from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport \"./CreateCard.scss\";\r\nimport UploadModal from './uploadModal/UploadModal';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport CardComponent from '../../../pages/Card/CardComponent/CardComponent';\r\n\r\nconst CreateCard = () => {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [profilePictureLabel, setProfilePictureLabel] = useState('Profile Picture');\r\n  const [backgroundImageLabel, setBackgroundImageLabel] = useState('Background Image');\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    company: '',\r\n    phone: '',\r\n    position: '',\r\n    instagram: '',\r\n    url: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    image: '',\r\n    background_image: '',\r\n    tiktok:'',\r\n    spotify:'',\r\n    twitter:'',\r\n    paypal:'',\r\n    vinted:'',\r\n    notes:'',\r\n    standvirtual:'',\r\n    olx:'',\r\n    piscapisca:'',\r\n    custojusto:''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const { id: id } = useParams();\r\n  const createcardKey = useMemo(() => `${formData.profilePicture}-${formData.background_image}`, [formData.profilePicture, formData.background_image]);\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Load the saved data from local storage on component mount\r\n    const savedFormData = JSON.parse(localStorage.getItem('formData'));\r\n    if (savedFormData) {\r\n      setFormData(savedFormData);\r\n    }\r\n\r\n    // Load images from local storage\r\n    const profilePicture = localStorage.getItem('profileImageURL');\r\n    const backgroundImage = localStorage.getItem('backgroundImageURL');\r\n\r\n    if (profilePicture) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        profilePicture: profilePicture,\r\n      }));\r\n    }\r\n\r\n    if (backgroundImage) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        background_image: backgroundImage,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // Open Modal\r\n  const openUploadModal = () => {\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowUploadModal(false);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const inputName = e.target.name;\r\n      if (inputName === 'profilePicture') {\r\n        setProfilePictureLabel(file.name);\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          localStorage.setItem('profileImageURL', event.target.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else if (inputName === 'backgroundImage') {\r\n        setBackgroundImageLabel(file.name);\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          localStorage.setItem('backgroundImageURL', event.target.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageChanges = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBackgroundImageLabel(file.name);\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        background_image: file.name,\r\n      }));\r\n    } else {\r\n      setBackgroundImageLabel('Background Image');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setCurrentStep(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const formDataToSubmit = new FormData();\r\n    formDataToSubmit.append('name', formData.name);\r\n    formDataToSubmit.append('email', formData.email);\r\n    formDataToSubmit.append('company', formData.company);\r\n    formDataToSubmit.append('position', formData.position);\r\n    formDataToSubmit.append('phone', formData.phone);\r\n    formDataToSubmit.append('instagram', formData.instagram);\r\n    formDataToSubmit.append('facebook', formData.facebook);\r\n    formDataToSubmit.append('linkedin', formData.linkedin);\r\n    formDataToSubmit.append('url', formData.url);\r\n    formDataToSubmit.append('userId', id);\r\n    formDataToSubmit.append('tiktok', formData.tiktok);\r\n    formDataToSubmit.append('spotify', formData.spotify);\r\n    formDataToSubmit.append('twitter', formData.twitter);\r\n    formDataToSubmit.append('paypal', formData.paypal);\r\n    formDataToSubmit.append('vinted', formData.vinted);\r\n    formDataToSubmit.append('notes', formData.notes);\r\n    formDataToSubmit.append('standvirtual', formData.standvirtual);\r\n    formDataToSubmit.append('olx', formData.olx);\r\n    formDataToSubmit.append('piscapisca', formData.piscapisca);\r\n    formDataToSubmit.append('custojusto', formData.custojusto);\r\n  \r\n    // Append profile image data\r\n    const profilePictureFileName = localStorage.getItem('profileImageUrl');\r\n    if (profilePictureFileName) {\r\n      console.log('Profile Picture:', profilePictureFileName);\r\n      formDataToSubmit.append('profilePicture', profilePictureFileName);\r\n    }\r\n  \r\n    // Append background image file from localStorage if it exists\r\n    const backgroundImageFileName = localStorage.getItem('backgroundImage');\r\n    if (backgroundImageFileName) {\r\n      console.log('Background Image:', backgroundImageFileName);\r\n      formDataToSubmit.append('background_image', backgroundImageFileName);\r\n    }\r\n  \r\n    // Log the form data\r\n    console.log('Form Data:', formDataToSubmit);\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        `https://${process.env.REACT_APP_HOST}/api//api/createcard`,\r\n        formDataToSubmit,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n  \r\n      if (response.status === 201 || response.status === 204) {\r\n        localStorage.removeItem('formData');\r\n        localStorage.removeItem('profileImageURL');\r\n        localStorage.removeItem('backgroundImageURL');\r\n        navigate(`/${response.data.userId}/dashboard/cards`);\r\n      } else {\r\n        console.error(\"Error creating card:\", response.data);\r\n        alert('Error creating card')\r\n        // Handle the error (e.g., show an error message to the user)\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error creating card\", err);\r\n      alert(\"There was an error creating your card\", err);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className='createcard-container'>\r\n      <div className=\"msform\">\r\n        {/* Modal for uploading profile picture and background image */}\r\n        {showUploadModal && (\r\n          <UploadModal\r\n            handleImageChange={handleImageChange}\r\n            handleImageChanges={handleImageChanges}\r\n            handleCloseModal={handleCloseModal}\r\n            handleSubmit={handleSubmit} \r\n            handlePrevious={() => setShowUploadModal(false)} // Close modal on previous button click\r\n          />\r\n        )}\r\n        <div className='createcard-container'>\r\n          <div className=\"card-content\">\r\n            <div className=\"side-navigation\">\r\n              <ul>\r\n                <li className={currentStep >= 1 ? 'active' : ''}>Card Setup</li>\r\n                <li className={currentStep >= 2 ? 'active' : ''}>Social Media</li>\r\n              \r\n              </ul>\r\n            </div>\r\n            <div className=\"msform\">\r\n              <form id=\"msform\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                {currentStep === 1 && (\r\n                  <fieldset>\r\n                    <h2 className=\"fs-title\">Setup your data</h2>\r\n                    <p className='fs-subtitle'>We'll guide you through the process of adding the data displayed in your card</p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleInputChange} required />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleInputChange} required />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Phone</label>\r\n                        <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" value={formData.phone} onChange={handleInputChange} required />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <label>Company</label>\r\n                        <input type=\"text\" name=\"company\" placeholder=\"Company (optional)\" value={formData.company} onChange={handleInputChange} />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Position</label>\r\n                        <input type=\"text\" name=\"position\" placeholder=\"Position (optional)\" value={formData.position} onChange={handleInputChange} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\" >\r\n                        <label>Address</label>\r\n                        <input type=\"text\" name=\"address\" placeholder=\"Address\" value={formData.address} onChange={handleInputChange} style={{ float: 'left' }} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"profile-picture-container\">\r\n                        <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/upload.png?v=1713209450\" alt=\"Upload Icon\" className=\"upload-icon\" />\r\n                        <input\r\n                          name=\"profilePicture\"\r\n                          id=\"profilePictureInput\"\r\n                          onChange={handleImageChange}\r\n                          className=\"file-input\"\r\n                          onClick={openUploadModal}\r\n                        />\r\n                        <label htmlFor=\"profilePictureInput\" className=\"file-label\">\r\n                          {profilePictureLabel}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input type=\"button\" name=\"next\" className=\"next action-button\" value=\"Next\" onClick={handleNext} />\r\n                    </div>\r\n                  </fieldset>\r\n                )}\r\n                {currentStep === 2 && (\r\n                  <fieldset>\r\n                    <h2 className=\"fs-title\">Social Profiles</h2>\r\n                    <h3 className=\"fs-subtitle\">Your presence on the social network</h3>\r\n\r\n                    <div className=\"social-input-container-wrapper\">\r\n                    <div className=\"social-input-container\">\r\n                      <div className=\"social-input\">\r\n                        <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-instagram.svg?v=1712083465\" className='social' alt=\"Instagram\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"instagram\"\r\n                          placeholder=\"Instagram\"\r\n                          value={formData.instagram}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-facebook.svg?v=1712083465' className='social' alt=\"Facebook\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"facebook\"\r\n                          placeholder=\"Facebook\"\r\n                          value={formData.facebook}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-linkedin.svg?v=1712083465' className='social' alt=\"LinkedIn\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"linkedin\"\r\n                          placeholder=\"Linkedin\"\r\n                          value={formData.linkedin}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/url.png?v=1712083467' className='social' alt=\"URL\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"url\"\r\n                          placeholder=\"Url\"\r\n                          value={formData.url}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                       <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/tiktok.png?v=1713213933' className='social' alt=\"tiktok\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"tiktok\"\r\n                          placeholder=\"tiktok\"\r\n                          value={formData.tiktok}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/spotify_bcf3311d-41be-49a9-8cec-d1bdc9363c4d.png?v=1713213932' className='social' alt=\"Spotify\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"spotify\"\r\n                          placeholder=\"spotify\"\r\n                          value={formData.spotify}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      \r\n                   \r\n                    </div>\r\n                    <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/twitter.svg?v=1713213932' className='social' alt=\"Twitter\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"twitter\"\r\n                          placeholder=\"Twitter\"\r\n                          value={formData.twitter}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/paypal.png?v=1713213933' className='social' alt=\"paypal\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"paypal\"\r\n                          placeholder=\"paypal\"\r\n                          value={formData.paypal}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/Vinted.png?v=1713213932' className='social' alt=\"vinted\" style={{width:\"100px\", height:\"60px\",marginRight:\"-20px\",marginLeft:\"-20px\"}}/>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"vinted\"\r\n                          placeholder=\"vinted\"\r\n                          value={formData.vinted}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/standvirtual.png?v=1713213933' className='social' alt=\"standvirtual\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"standvirtual\"\r\n                          placeholder=\"standvirtual\"\r\n                          value={formData.standvirtual}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/olx.png?v=1713213932' className='social' alt=\"olx\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"olx\"\r\n                          placeholder=\"olx\"\r\n                          value={formData.olx}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/piscapisca.png?v=1713213932' className='social' alt=\"piscapisca\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"piscapisca\"\r\n                          placeholder=\"piscapisca\"\r\n                          value={formData.piscapisca}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/custojusto.png?v=1713213932' className='social' alt=\"custojusto\" style={{width:\"100px\", height:\"60px\",marginRight:\"-35px\",marginLeft:\"-20px\"}} />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"custojusto\"\r\n                          placeholder=\"custojusto\"\r\n                          value={formData.custojusto}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/notes.png?v=1713213932' className='social' alt=\"notes\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"notes\"\r\n                          placeholder=\"notes\"\r\n                          value={formData.notes}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    \r\n                      </div>\r\n\r\n                    <input\r\n                      type=\"button\"\r\n                      name=\"previous\"\r\n                      className=\"previous action-button\"\r\n                      value=\"Previous\"\r\n                      onClick={handlePrevious}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"next action-button\"\r\n                      value=\"Submit\"\r\n                      onClick={handleSubmit}\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n                \r\n              </form>\r\n            </div>\r\n            <div className=\"createcard-component\">\r\n              {/* Render CardComponent here */}\r\n              <CardComponent\r\n               key={createcardKey}// Added key prop to force rerender when images change\r\n                email={formData.email}\r\n                username={formData.name}\r\n                phone={formData.phone}\r\n                company={formData.company}\r\n                title={formData.position}\r\n                instagram={formData.instagram}\r\n                facebook={formData.facebook}\r\n                linkedin={formData.linkedin}\r\n                url={formData.url}\r\n                notes={formData.notes}\r\n                background_image_url={formData.background_image}\r\n                profile_image_url={formData.profilePicture}\r\n                address={formData.address}\r\n                tiktok={formData.tiktok}\r\n                spotify={formData.spotify}\r\n                twitter={formData.twitter}\r\n                paypal={formData.paypal}\r\n                vinted={formData.vinted}\r\n                standvirtual={formData.standvirtual}\r\n                olx={formData.olx}\r\n                piscapisca={formData.piscapisca}\r\n                custojusto={formData.custojusto}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCard;\r\n"],"names":["_ref","isOpen","closeModal","notes","background_image","loading","profile_image_url","_jsx","_Fragment","children","_jsxs","className","onClick","rel","src","alt","onClose","formData","setFormData","useState","name","company","email","message","id","userId","useParams","handleChange","e","value","target","prevData","onSubmit","preventDefault","axios","post","concat","process","then","res","console","log","headers","status","alert","catch","err","response","htmlFor","type","placeholder","onChange","required","card_id","username","phone","title","background_image_url","onLoad","facebook","linkedin","instagram","google_reviews","address","youtube","url","paypal","tiktok","twitter","spotify","vinted","standvirtual","olx","piscapisca","custojusto","image","setImage","setLoading","isModalOpen","setIsModalOpen","isNotesOpen","setIsNotesOpen","accessKeyId","secretAccessKey","Region","Bucket","mapsUrl","useEffect","isMounted","async","imageBuffer","loadImageFromIndexedDB","blob","Blob","fetchImage","loadImageAndSetState","URL","revokeObjectURL","initIndexedDB","openDB","upgrade","db","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","error","store","transaction","objectStore","entry","get","data","s3Client","S3","credentials","region","urlObject","key","decodeURIComponent","pathname","replace","getObjectParams","Key","command","GetObjectCommand","send","Body","ContentType","tx","imageBlob","put","complete","saveImageToIndexedDB","fetchAndEncodeImage","fetch","imageUrl","resizeAndCompressImage","maxWidth","maxHeight","quality","options","Image","createObjectURL","Promise","resolve","reject","onload","onerror","width","height","canvas","document","createElement","getContext","drawImage","resizedBlob","toBlob","resizedBlobBuffer","Response","arrayBuffer","btoa","Uint8Array","reduce","byte","String","fromCharCode","generatePresignedURL","params","imageKey","Expires","signedURL","getSignedUrl","style","backgroundImage","card","vcf","removeDiacritics","str","unorm","decodedUsername","decodedTitle","decodedNotes","decodedAddress","add","imageURL","encodedImage","encoding","vCardData","toString","vcard_blob","TextEncoder","encode","downloadLink","href","download","window","location","handleGetInTouch","focusable","GoogleReviewsLogo","handleOpenNotes","marginBottom","openGoogleMaps","open","Modal","NoteModal","handleCloseNotes","handleCloseModal","profilePictureLabel","setProfilePictureLabel","backgroundImageLabel","setBackgroundImageLabel","saveImageToLocalStorage","file","localStorageKey","reader","FileReader","event","localStorage","setItem","result","readAsDataURL","accept","files","handleSubmit","removeItem","profilePictureFileInput","getElementById","backgroundImageFileInput","length","profilePictureFile","backgroundImageFile","CreateCard","currentStep","setCurrentStep","showUploadModal","setShowUploadModal","position","navigate","useNavigate","createcardKey","useMemo","profilePicture","Cookie","savedFormData","JSON","parse","getItem","handleImageChange","inputName","handleInputChange","formDataToSubmit","FormData","append","profilePictureFileName","backgroundImageFileName","withCredentials","UploadModal","handleImageChanges","handlePrevious","encType","float","openUploadModal","handleNext","marginRight","marginLeft","CardComponent"],"sourceRoot":""}