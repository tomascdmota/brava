{"version":3,"file":"static/js/954.4ca37c45.chunk.js","mappings":"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","sources":["pages/Dashboard/Cards/Cards.js","pages/Dashboard/Components/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport './Cards.scss';\r\nimport Header from '../Components/Header';\r\nimport CardComponent from '../../Card/CardComponent/CardComponent';\r\n\r\nfunction Cards() {\r\n  const { id: userId } = useParams();\r\n  const [userData, setUserData] = useState(null); // Initialize as null\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard/cards`,{ withCredentials: true })\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setCards(response.data.cards);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cards:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      });\r\n  }, [userId]);\r\n\r\n\r\n\r\n  if (userData === null) {\r\n    // Check for userData to be null instead of !userData\r\n    return (\r\n      <div className=\"cards-container\">\r\n        <Header />\r\n        {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n        <div className=\"nav-tiles\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <Header />\r\n      {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n      <div className=\"nav-tiles\">\r\n        <div className=\"tiles\">\r\n          {!loading &&\r\n            cards.map((card) => <CardComponent key={card.card_id} {...card} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import React, { useEffect, useState, useRef } from 'react';\r\nimport './Header.scss';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useParams } from 'react-router';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction Header(props) {\r\n  const { activeTab, onTabClick } = props;\r\n  const {id} = useParams();\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const isMobile = window.innerWidth <= 1000;\r\n  const menuRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    const handleSwipe = (event) => {\r\n      const startX = event.changedTouches[0].clientX;\r\n      const endX = event.changedTouches[event.changedTouches.length - 1].clientX;\r\n\r\n      if (startX - endX > 50) {\r\n        // Swipe left (closing the menu)\r\n        setMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleOutsideClick);\r\n    document.addEventListener('touchend', handleSwipe);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleOutsideClick);\r\n      document.removeEventListener('touchend', handleSwipe);\r\n    };\r\n  }, []);\r\n  const handleMenuClick = () => {\r\n    setMenuOpen(!isMenuOpen);\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      <header className={`dashboard-header ${isMenuOpen ? 'menu-open' : ''}`}>\r\n        <div className=\"dashboard-header-logo\">\r\n          <div className=\"dashboard-logo\">\r\n            <span className=\"dashboard-logo-icon\">\r\n              <img src=\"https://res.cloudinary.com/dnho57ne8/image/upload/v1699913993/brava_fqk4h4.png\" alt=\"Logo\" />\r\n            </span>\r\n            <h1 className=\"logo-title\">\r\n             Brava\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-header-navigation\">\r\n          <div className=\"tabs\">\r\n            \r\n            <a onClick={() => onTabClick('overview')} href={`/${id}/dashboard/overview`} className={activeTab === 'overview' ? 'active' : ''}>\r\n              Overview\r\n            </a>\r\n            <a onClick={() => onTabClick('cards')} href={`/${id}/dashboard/cards`} className={activeTab === 'cards' ? 'active' : ''}>\r\n              Cards\r\n            </a>\r\n            <a onClick={() => onTabClick('account')}  href={`/${id}/dashboard/account`} className={activeTab === 'account' ? 'active' : ''}>\r\n              Account\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard-header-actions\">\r\n          <button className=\"user-profile\">\r\n            <span>{props.username}</span>\r\n            <span>\r\n              {/*<img src=\"https://assets.codepen.io/285131/almeria-avatar.jpeg\" alt=\"User Avatar\" />*/}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        { isMobile && ( <div>\r\n        <div className=\"dashboard-header-mobile\">\r\n        <MenuIcon onClick={handleMenuClick} />\r\n        </div>\r\n\r\n             \r\n        <div className={`mobile-menu ${isMenuOpen ? 'open' : ''}`}>\r\n          {isMenuOpen &&<CloseIcon onClick={handleMenuClick} /> }\r\n          <a onClick={() => onTabClick('overview')} href={`/${id}/dashboard/overview`} className={activeTab === 'overview' ? 'active' : ''}>\r\n            Overview\r\n          </a>\r\n          <a onClick={() => onTabClick('profiles')} href={`/${id}/dashboard/profiles`} className={activeTab === 'profiles' ? 'active' : ''}>\r\n            Profiles\r\n          </a>\r\n          <a onClick={() => onTabClick('cards')} href={`/${id}/dashboard/cards`} className={activeTab === 'cards' ? 'active' : ''}>\r\n              Cards\r\n            </a>\r\n            <a onClick={() => onTabClick('account')}  href={`/${id}/dashboard/account`} className={activeTab === 'account' ? 'active' : ''}>\r\n              Account\r\n            </a>\r\n        </div>\r\n        </div>)}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;"],"names":["id","userId","useParams","userData","setUserData","useState","cards","setCards","loading","setLoading","navigate","useNavigate","useEffect","Cookie","get","axios","concat","process","withCredentials","then","response","data","catch","error","console","finally","_jsxs","className","children","_jsx","Header","map","card","CardComponent","card_id","props","activeTab","onTabClick","isMenuOpen","setMenuOpen","isMobile","window","innerWidth","menuRef","useRef","handleOutsideClick","event","current","contains","target","handleSwipe","changedTouches","clientX","length","document","addEventListener","removeEventListener","handleMenuClick","src","alt","onClick","href","username","MenuIcon","CloseIcon"],"sourceRoot":""}