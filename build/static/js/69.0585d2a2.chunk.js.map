{"version":3,"file":"static/js/69.0585d2a2.chunk.js","mappings":"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","sources":["pages/Dashboard/Account/Account.js","pages/Dashboard/Cards/Cards.js","pages/Dashboard/Components/Header.js","pages/Dashboard/Overview/Components/ContactComponent.js","pages/Dashboard/Overview/Components/Leads/Leads.js","pages/Dashboard/Overview/Components/Graph/Graph.js","pages/Dashboard/Components/EditCard/EditCard.js","pages/Dashboard/Overview/Components/PieChart/PieChart.js","pages/Dashboard/Overview/Components/LastContactsComponent/LastContactsComponent.js","pages/Dashboard/Analytics/Analytics.js","pages/Dashboard/Components/SideNavigation/SideNavigation.js","pages/Dashboard/Overview/Overview.js","pages/Dashboard/dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from '../Components/Header';\r\nimport Cookie from 'js-cookie';\r\nimport './Account.scss'\r\n\r\nfunction Account() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    // Clear authentication state (e.g., tokens, user information)\r\n    // Perform API or server logout (if needed)\r\n\r\n    // For example, if using localStorage for authentication tokens:\r\n    Cookie.remove('session_token');\r\n    localStorage.removeItem('profile_image_url');\r\n    localStorage.removeItem('username');\r\n    // Redirect to the login page\r\n    navigate('/login');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className='account-container'>\r\n      <Header />\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport './Cards.scss';\r\nimport Header from '../Components/Header';\r\nimport CardComponent from '../../Card/CardComponent/CardComponent';\r\nimport CreateCard from '../CreateCard/CreateCard';\r\n\r\nfunction Cards() {\r\n  const { id: userId } = useParams();\r\n  const [userData, setUserData] = useState(null); // Initialize as null\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submissionSuccess, setSubmissionSuccess]= useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard/cards`, { withCredentials: true })\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setCards(response.data.cards);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cards:', error);\r\n        if (error.response && error.response.status === 400) {\r\n          // If the response status is 400, render the CreateCard component\r\n          setUserData({}); // Set userData to an empty object to trigger rendering of CreateCard\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        } else {\r\n          // Handle other errors here\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        }\r\n        \r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      });\r\n  }, [userId, submissionSuccess]);\r\n\r\n  if (userData === null) {\r\n    // Check for userData to be null instead of !userData\r\n    return (\r\n      <div className=\"cards-container\">\r\n        {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n        <div className=\"nav-tiles\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n      {Object.keys(userData).length === 0 ? <CreateCard setSubmissionSuccess={setSubmissionSuccess} /> : null}\r\n      <div className=\"nav-tiles\">\r\n        <div className=\"tiles\">\r\n          {!loading &&\r\n            cards.map((card) => <CardComponent key={card.card_id} {...card} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","  import React, { useEffect, useState, useRef } from 'react';\r\n  import './Header.scss';\r\n  import MenuIcon from '@mui/icons-material/Menu';\r\n  import { useParams, useNavigate } from 'react-router-dom';\r\n  import CloseIcon from '@mui/icons-material/Close';\r\n\r\n  function Header(props, event) {\r\n    const { activeTab } = props;\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const isMobile = window.innerWidth <= 1000;\r\n    const menuRef = useRef(null);\r\n    const username = localStorage.getItem('username');\r\n    const profile_picture = localStorage.getItem('profile_image_url');\r\n\r\n    useEffect(() => {\r\n      const handleOutsideClick = (event) => {\r\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      const handleSwipe = (event) => {\r\n        const startX = event.changedTouches[0].clientX;\r\n        const endX = event.changedTouches[event.changedTouches.length - 1].clientX;\r\n\r\n        if (startX - endX > 50) {\r\n          // Swipe left (closing the menu)\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('click', handleOutsideClick);\r\n      document.addEventListener('touchend', handleSwipe);\r\n\r\n      return () => {\r\n        document.removeEventListener('click', handleOutsideClick);\r\n        document.removeEventListener('touchend', handleSwipe);\r\n      };\r\n    }, []);\r\n\r\n    const handleMenuClick = () => {\r\n      setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    function handleTabClick (tab) {\r\n      setMenuOpen(false);\r\n      navigate(`/${id}/dashboard/${tab}`);\r\n    };\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <header className={`dashboard-header ${isMenuOpen ? 'menu-open' : ''}`}>\r\n          <div className=\"dashboard-header-logo\">\r\n            <div className=\"dashboard-logo\">\r\n              \r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-header-actions\">\r\n            <button onClick={() => handleTabClick('account')} className=\"user-profile\">\r\n              <span>{username}</span>\r\n              <span>\r\n                <img src={profile_picture} alt=\"User Avatar\" />\r\n              </span>\r\n            </button>\r\n          </div>\r\n         \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Header;\r\n","import React, { useState } from 'react';\r\nimport './ContactComponent.scss';\r\n\r\nfunction ContactComponent({ user_id, contact_id, name, company, email, message, contact_date, phone, sector }) {\r\n  const isMobile = window.innerWidth <= 1000;\r\n  const formattedDate = new Date(contact_date).toLocaleDateString();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contacts\">\r\n      <div className=\"contact\">\r\n        <dl className=\"contact-details\">\r\n          <div>\r\n            <dt>{name}, {company}</dt>\r\n          </div>\r\n          <div>\r\n            <dd style={{marginRight:\"80px\"}}>{email}</dd>\r\n          </div>\r\n          <div>\r\n            <dd>{phone}</dd>\r\n          </div>\r\n          <div>\r\n            <dd>{sector}</dd>\r\n          </div>\r\n          {!isMobile && (\r\n            <div>\r\n              <dd style={{marginLeft:'-10px'}}>{formattedDate}</dd>\r\n            </div>\r\n          )}\r\n          <div className={`contact-message ${isMobile ? 'full-width-message' : ''}`}>\r\n            <dt>\r\n                <button onClick={toggleModal}>Read Message</button>\r\n            </dt>\r\n          </div>\r\n        </dl>\r\n      </div>\r\n      {isModalOpen && (\r\n      <div className=\"lead-modal\">\r\n      <div className=\"lead-modal-content\">\r\n        <span className=\"close\" onClick={toggleModal}>&times;</span>\r\n        <h2 className='lead-modal-name'>Message</h2>\r\n        <p>{message}</p>\r\n        <div className=\"modal-buttons\">\r\n          {phone && (\r\n            <button onClick={() => window.location.href = `tel:${phone}`}>Call {name}</button>\r\n          )}\r\n          {email && (\r\n            <button onClick={() => window.location.href = `mailto:${email}`}>Email {email}</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Leads.scss';\r\nimport '../../Overview.scss';\r\nimport ContactComponent from '../ContactComponent';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\n\r\nconst Leads = ({ userId, leadsData }) => {\r\n  const [contactData, setContactData] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterOption, setFilterOption] = useState('mostRecent');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const contactsPerPage = 7;\r\n  const isMobile = window.innerWidth <= 1000;\r\n\r\n  useEffect(() => {\r\n    const fetchContactData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://${process.env.REACT_APP_HOST}/api/${userId}/contacts`);\r\n        setContactData(response.data.contacts); // Update to set only the contacts array\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log('Error fetching contact data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchContactData();\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  // Ensure contactData is an array before filtering\r\n  const filteredContacts = Array.isArray(contactData) ? contactData.filter(contact => {\r\n    return (\r\n      contact.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      contact.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      contact.company.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  }).sort((a, b) => {\r\n    if (filterOption === 'mostRecent') {\r\n      return new Date(b.contact_date) - new Date(a.contact_date);\r\n    } else {\r\n      return new Date(a.contact_date) - new Date(b.contact_date);\r\n    }\r\n  }) : [];\r\n\r\n  const indexOfLastContact = currentPage * contactsPerPage;\r\n  const indexOfFirstContact = indexOfLastContact - contactsPerPage;\r\n  const currentContacts = filteredContacts.slice(indexOfFirstContact, indexOfLastContact);\r\n  const contactCounter = currentContacts.length;\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const downloadCSV = () => {\r\n    if (contactData && contactData.length > 0) {\r\n      const header = ['Name', 'Email', 'Company', 'Contact Date', 'Message'];\r\n      const csvData = [header.join(',')];\r\n\r\n      contactData.forEach(contact => {\r\n        const row = [\r\n          contact.name,\r\n          contact.email,\r\n          contact.company,\r\n          contact.sector,\r\n          contact.phone,\r\n          contact.contact_date,\r\n          contact.message\r\n        ];\r\n        csvData.push(row.join(','));\r\n      });\r\n\r\n      const csvContent = csvData.join('\\n');\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\r\n      saveAs(blob, 'leads.csv');\r\n    }\r\n  };\r\n\r\n  const pagination = (\r\n    <div className=\"pagination-container\">\r\n      <ul className=\"pagination\">\r\n        {Array.from({ length: Math.max(1, Math.ceil(filteredContacts.length / contactsPerPage)) }, (_, i) => (\r\n          <li\r\n            key={i}\r\n            className={currentPage === i + 1 ? 'active' : ''}\r\n            onClick={() => paginate(i + 1)}\r\n          >\r\n            {i + 1}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <div className='lead-container'>\r\n        <div className=\"lead-header\">\r\n          <h1 className='lead-title'>Card generated Leads</h1>\r\n        </div>\r\n        <div className=\"lead-wrapper\">\r\n          {/* Filter container */}\r\n          <div className=\"filter-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              value={searchQuery}\r\n              onChange={e => setSearchQuery(e.target.value)}\r\n              style={{ width: '100%' }} // Set the input width\r\n            />\r\n            <select\r\n              value={filterOption}\r\n              onChange={e => setFilterOption(e.target.value)}\r\n              style={{ height: '40px' }} // Set the dropdown height\r\n            >\r\n              <option value=\"mostRecent\">Most Recent</option>\r\n              <option value=\"oldest\">Oldest</option>\r\n            </select>\r\n          </div>\r\n          {/* Contact description */}\r\n          <div className=\"contact-description\">\r\n            <h1>Name, Company</h1>\r\n            <h1>Email</h1>\r\n            <h1 style={{marginLeft:\"40px\"}}>Phone</h1>\r\n            <h1>Sector</h1>\r\n            <h1>Contact Date</h1>\r\n            <h1>Message</h1>\r\n          </div>\r\n          {/* Display contacts */}\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            currentContacts.length > 0 ? (\r\n              currentContacts.map(contact => (\r\n                <ContactComponent\r\n                  key={contact.contact_id} // Ensure the key is unique\r\n                  user_id={contact.user_id}\r\n                  contact_id={contact.contact_id}\r\n                  name={contact.name}\r\n                  company={contact.company}\r\n                  email={contact.email}\r\n                  sector={contact.sector}\r\n                  phone={contact.phone}\r\n                  message={contact.message}\r\n                  contact_date={contact.contact_date} // Ensure this prop is passed\r\n                />\r\n              ))\r\n            ) : (\r\n              <p>No results found.</p>\r\n            )\r\n          )}\r\n          {/* Export button */}\r\n          <button className=\"download-csv-button\" onClick={downloadCSV}>Export Leads</button>\r\n        </div>\r\n        {/* Pagination */}\r\n        {pagination}\r\n        {/* Sidebar */}\r\n        <div className=\"overview-body-sidebar\">\r\n          <section className=\"payment-section\">\r\n            {!isMobile && (\r\n              <div>\r\n                <h2>GENERATED LEADS: </h2>\r\n                <div className='contact-counter'>{contactData?.length ?? 0}</div>\r\n              </div>\r\n            )}\r\n            <div className=\"payment-section-header\"></div>\r\n          </section>\r\n        </div>\r\n        \r\n      </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Leads;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { VictoryChart, VictoryLine, VictoryAxis, VictoryLabel } from 'victory';\r\nimport './Graph.scss'; // Import the styles\r\n\r\nconst GraphComponent = ({ leadsData }) => {\r\n  const containerRef = useRef(null);\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      const entry = entries[0];\r\n      if (entry) {\r\n        const { width, height } = entry.contentRect;\r\n        setDimensions({ width, height });\r\n      }\r\n    });\r\n\r\n    resizeObserver.observe(containerRef.current);\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  if (!leadsData || !Array.isArray(leadsData)) return null;\r\n\r\n  // Initialize contactsPerDay object\r\n  const contactsPerDay = {\r\n    Sun: 0, Mon: 0, Tue: 0, Wed: 0, Thu: 0, Fri: 0, Sat: 0\r\n  };\r\n\r\n  // Count leads for each day of the week\r\n  leadsData.forEach(lead => {\r\n    const dayOfWeek = new Date(lead.access_date).toLocaleDateString('en-US', { weekday: 'short' });\r\n    contactsPerDay[dayOfWeek] += 1;\r\n  });\r\n\r\n  // Define days of the week\r\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  // Prepare data for Victory\r\n  const data = daysOfWeek.map(day => ({ x: day, y: contactsPerDay[day] }));\r\n\r\n  return (\r\n    <div ref={containerRef} className='graph-container'>\r\n      <VictoryChart width={dimensions.width} height={dimensions.height}>\r\n        <VictoryLabel text=\"Weekly Taps\" x={dimensions.width / 2} y={10} textAnchor=\"middle\" style={{ fill: '#fff', fontSize: 22, fontWeight: 'bold' }} />\r\n        <VictoryAxis\r\n          tickValues={daysOfWeek}\r\n          style={{\r\n            tickLabels: { fontSize: 16, fill: '#fff', fontWeight: 'bold' }, // Customize axis tick labels\r\n            axis: { stroke: '#fff' }, // Customize axis line\r\n          }}\r\n        />\r\n        <VictoryAxis\r\n          dependentAxis\r\n          style={{\r\n            tickLabels: { fontSize: 16, fill: '#fff', fontWeight: 'bold' }, // Customize axis tick labels\r\n            axis: { stroke: '#fff' }, // Customize axis line\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={data}\r\n          style={{\r\n            data: { stroke: '#8824c2' }, // Customize line color\r\n            parent: { border: '1px solid #000' }\r\n          }}\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport CreateCard from '../../CreateCard/CreateCard';\r\n\r\nconst EditCard = () => {\r\n  const { id: userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [cardData, setCardData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCardData = async () => {\r\n      try {\r\n        const sessionToken = Cookie.get('session_token');\r\n        if (!sessionToken) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        const response = await axios.get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard/cards`); // Adjust the API endpoint\r\n        setCardData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching card data:', error);\r\n      }\r\n    };\r\n\r\n    fetchCardData();\r\n  }, [userId, navigate]);\r\n\r\n  return (\r\n    <div>\r\n      {cardData && (\r\n        <CreateCard initialValues={cardData?.cards[0]} cardId={cardData.cards[0]?.card_id} isEditing={true} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Chart } from 'react-google-charts';\r\nimport './PieChart.scss';\r\n\r\nconst PieChart = () => {\r\n  const { id: userId } = useParams();\r\n  const [pieData, setPieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://${process.env.REACT_APP_HOST}/api/${userId}/icon-engagement`);\r\n        const responseData = response.data;\r\n        const total = responseData?.top5Metrics.reduce((acc, curr) => acc + curr.count, 0);\r\n        const filteredMetrics = responseData?.top5Metrics?.filter(entry => entry.count > 0);\r\n        \r\n        if (filteredMetrics && total !== 0) { // Ensure filteredMetrics is defined\r\n          const formattedData = [\r\n            ['Metric', 'Count'],\r\n            ...filteredMetrics.map(entry => [mapMetricToLabel(entry.metric), entry.count])\r\n          ];\r\n          setPieData(formattedData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Function to map metric names to user-friendly labels\r\n  const mapMetricToLabel = (metric) => {\r\n    switch (metric) {\r\n      case 'google_reviews_count':\r\n        return 'Google Reviews';\r\n      case 'instagram_count':\r\n        return 'Instagram';\r\n      case 'facebook_count':\r\n        return 'Facebook';\r\n      case 'linkedin_count':\r\n        return 'LinkedIn';\r\n      case 'youtube_count':\r\n        return 'YouTube';\r\n      case 'paypal_count':\r\n        return 'PayPal';\r\n      case 'twitter_count':\r\n        return 'Twitter';\r\n      case 'tiktok_count':\r\n        return 'TikTok';\r\n      case 'spotify_count':\r\n        return 'Spotify';\r\n      case 'vinted_count':\r\n        return 'Vinted';\r\n      case 'notes_count':\r\n        return 'Notes';\r\n      case 'address_count':\r\n        return 'Address';\r\n      case 'standvirtual_count':\r\n        return 'Standvirtual';\r\n      case 'olx_count':\r\n        return 'OLX';\r\n      case 'piscapisca_count':\r\n        return 'Piscapisca';\r\n      case 'custojusto_count':\r\n        return 'Custo Justo';\r\n      case 'url_count':\r\n        return 'URL';\r\n      default:\r\n        return metric;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pie-chart-container\">\r\n      <h2>Social Media Engagement</h2>\r\n      <div className=\"pie-chart\">\r\n        {pieData && pieData.length > 0 ? (\r\n          <Chart\r\n            width={'100%'}\r\n            height={'100%'}\r\n            chartType=\"PieChart\"\r\n            data={pieData}\r\n            \r\n            options={{\r\n              pieSliceText:'none',\r\n              pieHole: 0.5,\r\n              sliceVisibilityThreshold: 0.01, // 1%\r\n              legend: {\r\n                textStyle: {\r\n                  color: '#fff', // Change legend text color\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              backgroundColor: '#1b1b1c',\r\n              pieSliceBorderColor: 'none',\r\n              colors: ['#613FB8', '#361BA0', '#8B63D0', '#B688E7', '#E0ACFF'],\r\n              chartArea: {\r\n                width: '100%',\r\n                height: '100%',\r\n                top: 0,\r\n                left: 0,\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './LastContactsComponent.scss';\r\nimport ContactComponent from '../../Components/ContactComponent'; // Import the ContactComponent\r\n\r\nconst PAGE_SIZE = 5; // Number of contacts per page\r\nconst ROW_HEIGHT = 50; // Approximate height of each row in pixels\r\n\r\nconst LastContactsComponent = ({ contacts, count }) => {\r\n  // Ensure contacts is an array, if not, default to an empty array\r\n  const contactsArray = Array.isArray(contacts) ? contacts : [];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [selectedMessage, setSelectedMessage] = useState(null); // Track the selected message for the modal\r\n\r\n  useEffect(() => {\r\n    // Calculate the total number of pages\r\n    const total = Math.ceil(count / PAGE_SIZE);\r\n    setTotalPages(total);\r\n  }, [count]);\r\n\r\n  // Get contacts for the current page\r\n  const startIndex = (currentPage - 1) * PAGE_SIZE;\r\n  const endIndex = startIndex + PAGE_SIZE;\r\n  const currentContacts = contactsArray.slice(startIndex, endIndex);\r\n\r\n  // Calculate the height of the table\r\n  const tableHeight = Math.max(PAGE_SIZE, currentContacts.length) * ROW_HEIGHT;\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  // Function to handle selecting a message and opening the modal\r\n  const handleSelectMessage = (message) => {\r\n    setSelectedMessage(message);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setSelectedMessage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"last-contacts-component\">\r\n      <div className=\"table-container\" style={{ height: tableHeight }}>\r\n        <h1>Recent Leads</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Company</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Contact Date</th>\r\n              <th>Sector</th>\r\n              <th>Message</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentContacts.map((contact, index) => (\r\n              <tr key={index}>\r\n                <td>{contact.name || '-'}</td>\r\n                <td>{contact.company || '-'}</td>\r\n                <td>{contact.email || '-'}</td>\r\n                <td>{contact.phone || '-'}</td>\r\n                <td>{contact.contact_date}</td>\r\n                <td>{contact.sector || '-'}</td>\r\n                {/* Render the ContactComponent for each contact */}\r\n                <td>{contact.message || '-'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"pagination\">\r\n        {/* Pagination controls go here */}\r\n      </div>\r\n      {/* Render the modal HTML structure conditionally */}\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastContactsComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport PieChart from '../Overview/Components/PieChart/PieChart';\r\nimport \"./Analytics.scss\";\r\nimport LastContactsComponent from '../Overview/Components/LastContactsComponent/LastContactsComponent';\r\nimport GraphComponent from '../Overview/Components/Graph/Graph';\r\n\r\nfunction Analytics({ leadsData, contacts, username }) {\r\n  const defaultLeadsData = leadsData || [];\r\n  const defaultContacts = contacts || [];\r\n  const [city, setCity] = useState('');\r\n  const ratio = ((defaultLeadsData.length / defaultContacts.length) * 100).toFixed(1) || 0;\r\n\r\n  useEffect(() => {\r\n    if (!leadsData || !Array.isArray(leadsData)) return;\r\n\r\n    const cities = leadsData.map(lead => lead.city);\r\n    const cityCounts = {};\r\n    cities.forEach(city => {\r\n      cityCounts[city] = (cityCounts[city] || 0) + 1;\r\n    });\r\n\r\n    const sortedCities = Object.keys(cityCounts).sort((a, b) => cityCounts[b] - cityCounts[a]);\r\n    const mostDominant = sortedCities[0];\r\n    setCity(mostDominant);\r\n  }, [leadsData]);\r\n\r\n  const sliderSettings = {\r\n    dots: true,\r\n    arrows: false,\r\n    infinite: false,\r\n    speed: 200,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className='analytics-container'>\r\n      <div className=\"analytics-section\">\r\n        {window.innerWidth <= 768 ? (\r\n          <Slider {...sliderSettings}>\r\n            <div className=\"analytics-rectangle\">\r\n              <div>\r\n                <h1>{defaultContacts.length}</h1>\r\n                <p>Lead Count</p>\r\n              </div>\r\n              <hr className=\"divider\" />\r\n              <div>\r\n                <h1>{defaultLeadsData.length}</h1>\r\n                <p>Total Tap Count</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"analytics-rectangle\">\r\n              <div>\r\n                <h1>{ratio}%</h1>\r\n                <p>Tap-Lead ratio</p>\r\n              </div>\r\n              <hr className=\"divider\" />\r\n              <div>\r\n                <h1>{city}</h1>\r\n                <p>Dominant City</p>\r\n              </div>\r\n            </div>\r\n          </Slider>\r\n        ) : (\r\n          <div className=\"analytics-rectangle\">\r\n            <div>\r\n              <h1>{defaultContacts.length}</h1>\r\n              <p>Lead Count</p>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n            <div>\r\n              <h1>{defaultLeadsData.length}</h1>\r\n              <p>Total Tap Count</p>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n            <div>\r\n              <h1>{ratio}%</h1>\r\n              <p>Tap-Lead ratio</p>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n            <div>\r\n              <h1>{city}</h1>\r\n              <p>Dominant City</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"graph-section\">\r\n        <GraphComponent leadsData={defaultLeadsData} />\r\n        <PieChart />\r\n      </div>\r\n      <div className=\"analytics-section\">\r\n        <LastContactsComponent\r\n          title=\"Last 5 Contacts\"\r\n          count={defaultContacts.length}\r\n          contacts={defaultContacts}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { useState } from 'react';\r\nimport './SideNavigation.scss';\r\n\r\nconst SideNavigation = ({ handleTabClick }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  \r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const handleNavItemClick = (tab) => {\r\n    handleTabClick(tab); // Call the handleTabClick function with the selected tab\r\n    setShowMenu(false); // Close the mobile menu after a navigation item is clicked\r\n  };\r\n\r\n  return (\r\n    <div className=\"overview-body-navigation\">\r\n      {/* Mobile Menu Button */}\r\n      <div className=\"mobile-menu-button\" onClick={toggleMenu}>\r\n        <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-menu.svg?v=1714064137\" alt=\"Menu\" className=\"menu-icon\" />\r\n      </div>\r\n      \r\n      <nav className={`side-navigation ${showMenu ? 'show' : ''}`}>\r\n      <div className=\"dashboard-header-logo\">\r\n            <div className=\"dashboard-logo\">\r\n              <span className=\"dashboard-logo-icon\">\r\n                <img src=\"https://res.cloudinary.com/dnho57ne8/image/upload/v1699913993/brava_fqk4h4.png\" alt=\"Logo\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        <a onClick={() => handleNavItemClick('overview')} href=\"#\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/dashboard.svg?v=1713982497\" alt=\"Dashboard\" className=\"nav-icon\" />\r\n          <span>Dashboard</span>\r\n        </a>\r\n        <div className=\"dropdown-wrapper\">\r\n          <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n            <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/account-balance-wallet.svg?v=1713982779\" alt=\"Cards\" className=\"nav-icon\" />\r\n            <span>Cards</span>\r\n          </div>\r\n          {showDropdown && (\r\n            <ul className=\"dropdown-content\">\r\n              <li onClick={() => handleNavItemClick('my-card')}>My Card</li>\r\n              <li onClick={() => handleNavItemClick('edit-card')}>Edit Card</li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <a onClick={() => handleNavItemClick('leads')} href=\"#\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/mail.svg?v=1713983246\" alt=\"Leads\" className=\"nav-icon\" />\r\n          <span>Leads</span>\r\n        </a>\r\n        <a href=\"#\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/calendar-today.svg?v=1713983141\" alt=\"Calendar\" className=\"nav-icon\" />\r\n          <span>Calendar</span>\r\n        </a>\r\n        <a onClick={() => handleNavItemClick('account')} href=\"#\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/settings.svg?v=1713983432\" alt=\"Settings\" className=\"nav-icon\" />\r\n          <span>Settings</span>\r\n        </a>\r\n        <a href=\"https://bravanfc.com\" target=\"_blank\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/local-grocery-store.svg?v=1713983431\" alt=\"Store\" className=\"nav-icon\" />\r\n          <span>Store</span>\r\n        </a>\r\n        <a href=\"#\" className=\"nav-link\">\r\n          <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/logout.svg?v=1713983567\" alt=\"Logout\" className=\"nav-icon\" />\r\n          <span>Logout</span>\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport \"./Overview.scss\"\r\nimport Leads from './Components/Leads/Leads';\r\nimport Card from '../Cards/Cards'\r\nimport GraphComponent from './Components/Graph/Graph';\r\nimport EditCard from '../Components/EditCard/EditCard';\r\nimport Analytics from '../Analytics/Analytics';\r\n\r\nimport Cookie from 'js-cookie';\r\nimport SideNavigation from '../Components/SideNavigation/SideNavigation';\r\nimport Account from '../Account/Account'\r\n\r\nconst OverviewContent = ({ contactData, userId, leadsData, username }) => {\r\n  const navigate = useNavigate();\r\n  const { tab } = useParams();\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedTab, setSelectedTab] = useState(tab || 'overview');\r\n\r\n  const contactsPerPage = 5;\r\n\r\n  // Calculate indexes of contacts to display on the current page\r\n  const indexOfLastContact = currentPage * contactsPerPage;\r\n  var currentContacts = '';\r\n  if (Array.isArray(contactData) && contactData.length > 0) {\r\n    // Calculate indexes of contacts to display on the current page\r\n    const indexOfLastContact = currentPage * contactsPerPage;\r\n    const indexOfFirstContact = indexOfLastContact - contactsPerPage;\r\n    \r\n    // Slice the contactData array to get the contacts for the current page\r\n    currentContacts = contactData.slice(indexOfFirstContact, indexOfLastContact);\r\n  }\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n\r\n  const handleTabClick = (tab) => {\r\n    navigate(`/${userId}/dashboard/${tab}`);\r\n    setSelectedTab(tab)\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    setMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sessionToken = Cookie.get('session_token');\r\n    if (!sessionToken) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"overview\">\r\n        <SideNavigation handleTabClick={handleTabClick} /> \r\n        <div className=\"overview-body-main-content\">\r\n          {selectedTab === 'overview' && <Analytics leadsData={leadsData} username={username} contacts={contactData}/> }\r\n          {selectedTab === 'my-card' && <Card />}\r\n          {selectedTab === 'edit-card' && <EditCard />}\r\n          {selectedTab === 'leads' && <Leads leadsData={leadsData}  userId={userId}/>}\r\n          {selectedTab === 'account' && <Account />}\r\n          {/* Add more conditions for other tabs */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewContent;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './dashboard.scss';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from './Components/Header';\r\nimport OverviewContent from './Overview/Overview';\r\nimport Cards from './Cards/Cards';\r\nimport Cookie from 'js-cookie';\r\nimport GraphComponent from './Overview/Components/Graph/Graph';\r\n\r\nexport function Dashboard() {\r\n  const { id: userId, tab } = useParams();\r\n  const navigate = useNavigate();\r\n  const [userData, setUserData] = useState(null);\r\n  const [leadsData, setLeadsData] = useState(null);\r\n  const [contactData, setContactData] = useState(null)\r\n  const isDataFetched = useRef(false);\r\n\r\n  useEffect(() => {\r\n\r\n    // Check if userId exists before making the API call\r\n    if (!userId) return;\r\n\r\n    // Check if data is being fetched to avoid redundant API calls\r\n    if (isDataFetched.current) {\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const sessionToken = Cookie.get('token');\r\n        if (!sessionToken) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n    \r\n        const response = await axios.get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard`, { withCredentials: true });\r\n    \r\n        // Extract username and profile_image_url from the response data object\r\n        const { username, profile_image_url } = response.data.userData;\r\n    \r\n        // Set userData state with extracted data\r\n        setUserData({ username, profile_image_url });\r\n    \r\n        // Set leadsData state with extracted data\r\n        setLeadsData(response.data.leadsData);\r\n        setContactData(response.data.contactsData)\r\n        \r\n        // Store username and profile image URL in localStorage\r\n        localStorage.setItem('profile_image_url', profile_image_url);\r\n        localStorage.setItem('username', username);\r\n    \r\n        // Update the ref to indicate that data has been fetched\r\n        isDataFetched.current = true;\r\n      } catch (error) {\r\n        console.log('Error fetching data:', error);\r\n      }\r\n    };\r\n    // Fetch data only if userId exists and data is not being fetched\r\n    fetchData();\r\n  }, [userId, navigate]);\r\n \r\n  \r\n  return (\r\n    <div>\r\n      {/* Render the Header component with default values if userData is null */}\r\n      <Header header_username={userData ? userData.username : 'Loading...'} profile_picture={userData ? userData.profile_image_url : 'default_profile_picture_url'} />\r\n      <div className=\"dashboard-body\">\r\n        {/* Pass the selected tab to the OverviewContent component */}\r\n        <OverviewContent selectedTab={tab}  contactData={contactData} username={userData?.username} userId={userId} leadsData={leadsData}/>\r\n        {/* Render Cards component */}\r\n        {tab === 'cards' && <Cards contactData={userData} />}\r\n        {/* Add other tab content here */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["navigate","useNavigate","useEffect","Cookie","get","_jsxs","className","children","_jsx","Header","onClick","handleLogout","remove","localStorage","removeItem","id","userId","useParams","userData","setUserData","useState","cards","setCards","loading","setLoading","submissionSuccess","setSubmissionSuccess","axios","concat","process","withCredentials","then","response","data","catch","error","console","status","finally","Object","keys","length","CreateCard","map","card","CardComponent","card_id","props","event","activeTab","isMenuOpen","setMenuOpen","menuRef","window","innerWidth","useRef","username","getItem","profile_picture","handleOutsideClick","current","contains","target","handleSwipe","changedTouches","clientX","document","addEventListener","removeEventListener","handleTabClick","tab","src","alt","_ref","user_id","contact_id","name","company","email","message","contact_date","phone","sector","isMobile","formattedDate","Date","toLocaleDateString","isModalOpen","setIsModalOpen","toggleModal","style","marginRight","marginLeft","location","href","_contactData$length","leadsData","contactData","setContactData","searchQuery","setSearchQuery","filterOption","setFilterOption","currentPage","setCurrentPage","async","contacts","log","fetchContactData","filteredContacts","Array","isArray","filter","contact","toLowerCase","includes","sort","a","b","indexOfLastContact","indexOfFirstContact","currentContacts","slice","pagination","from","Math","max","ceil","_","i","type","placeholder","value","onChange","e","width","height","ContactComponent","downloadCSV","csvData","join","forEach","row","push","csvContent","blob","Blob","saveAs","containerRef","dimensions","setDimensions","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","disconnect","contactsPerDay","Sun","Mon","Tue","Wed","Thu","Fri","Sat","lead","dayOfWeek","access_date","weekday","daysOfWeek","day","x","y","ref","VictoryChart","VictoryLabel","text","textAnchor","fill","fontSize","fontWeight","VictoryAxis","tickValues","tickLabels","axis","stroke","dependentAxis","VictoryLine","parent","border","EditCard","_cardData$cards$","cardData","setCardData","fetchCardData","initialValues","cardId","isEditing","PieChart","pieData","setPieData","_responseData$top5Met","responseData","total","top5Metrics","reduce","acc","curr","count","filteredMetrics","formattedData","mapMetricToLabel","metric","fetchData","Chart","chartType","options","pieSliceText","pieHole","sliceVisibilityThreshold","legend","textStyle","color","backgroundColor","pieSliceBorderColor","colors","chartArea","top","left","contactsArray","totalPages","setTotalPages","selectedMessage","setSelectedMessage","startIndex","endIndex","tableHeight","index","defaultLeadsData","defaultContacts","city","setCity","ratio","toFixed","cities","cityCounts","mostDominant","Slider","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","responsive","breakpoint","settings","GraphComponent","LastContactsComponent","title","showDropdown","setShowDropdown","showMenu","setShowMenu","handleNavItemClick","toggleMenu","toggleDropdown","selectedTab","setSelectedTab","SideNavigation","Analytics","Card","Leads","Account","Dashboard","setLeadsData","isDataFetched","profile_image_url","contactsData","setItem","header_username","OverviewContent","Cards"],"sourceRoot":""}