{"version":3,"file":"static/js/361.95c0af0f.chunk.js","mappings":"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","sources":["pages/Dashboard/Cards/Cards.js","pages/Dashboard/Components/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport './Cards.scss';\r\nimport Header from '../Components/Header';\r\nimport CardComponent from '../../Card/CardComponent/CardComponent';\r\nimport CreateCard from '../CreateCard/CreateCard';\r\n\r\nfunction Cards() {\r\n  const { id: userId } = useParams();\r\n  const [userData, setUserData] = useState(null); // Initialize as null\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submissionSuccess, setSubmissionSuccess]= useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard/cards`, { withCredentials: true })\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setCards(response.data.cards);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cards:', error);\r\n        if (error.response && error.response.status === 400) {\r\n          // If the response status is 400, render the CreateCard component\r\n          setUserData({}); // Set userData to an empty object to trigger rendering of CreateCard\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        } else {\r\n          // Handle other errors here\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        }\r\n        \r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      });\r\n  }, [userId, submissionSuccess]);\r\n\r\n  if (userData === null) {\r\n    // Check for userData to be null instead of !userData\r\n    return (\r\n      <div className=\"cards-container\">\r\n        <Header />\r\n        {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n        <div className=\"nav-tiles\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <Header />\r\n      {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n      {Object.keys(userData).length === 0 ? <CreateCard setSubmissionSuccess={setSubmissionSuccess} /> : null}\r\n      <div className=\"nav-tiles\">\r\n        <div className=\"tiles\">\r\n          {!loading &&\r\n            cards.map((card) => <CardComponent key={card.card_id} {...card} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","  import React, { useEffect, useState, useRef } from 'react';\r\n  import './Header.scss';\r\n  import MenuIcon from '@mui/icons-material/Menu';\r\n  import { useParams, useNavigate } from 'react-router-dom';\r\n  import CloseIcon from '@mui/icons-material/Close';\r\n\r\n  function Header(props, event) {\r\n    const { activeTab } = props;\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const isMobile = window.innerWidth <= 1000;\r\n    const menuRef = useRef(null);\r\n    const username = localStorage.getItem('username');\r\n    const profile_picture = localStorage.getItem('profile_image_url');\r\n\r\n    useEffect(() => {\r\n      const handleOutsideClick = (event) => {\r\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      const handleSwipe = (event) => {\r\n        const startX = event.changedTouches[0].clientX;\r\n        const endX = event.changedTouches[event.changedTouches.length - 1].clientX;\r\n\r\n        if (startX - endX > 50) {\r\n          // Swipe left (closing the menu)\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('click', handleOutsideClick);\r\n      document.addEventListener('touchend', handleSwipe);\r\n\r\n      return () => {\r\n        document.removeEventListener('click', handleOutsideClick);\r\n        document.removeEventListener('touchend', handleSwipe);\r\n      };\r\n    }, []);\r\n\r\n    const handleMenuClick = () => {\r\n      setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    function handleTabClick (tab) {\r\n      setMenuOpen(false);\r\n      navigate(`/${id}/dashboard/${tab}`);\r\n    };\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <header className={`dashboard-header ${isMenuOpen ? 'menu-open' : ''}`}>\r\n          <div className=\"dashboard-header-logo\">\r\n            <div className=\"dashboard-logo\">\r\n              <span className=\"dashboard-logo-icon\">\r\n                <img src=\"https://res.cloudinary.com/dnho57ne8/image/upload/v1699913993/brava_fqk4h4.png\" alt=\"Logo\" />\r\n              </span>\r\n              <h1 className=\"logo-title\">Brava</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-header-navigation\">\r\n            <div className=\"tabs\">\r\n            <button onClick={(event) => handleTabClick('overview', event)} className={activeTab === 'overview' ? 'active' : ''}>\r\n            <a>Overview</a>\r\n          </button>\r\n          <button onClick={(event) => handleTabClick('cards', event)} className={activeTab === 'cards' ? 'active' : ''}>\r\n           <a> Cards</a>\r\n          </button>\r\n          <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n           <a>Account</a> \r\n          </button>\r\n          <button>\r\n            <a href=\"https://bravanfc.com\" >Store</a>\r\n          </button>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-header-actions\">\r\n            <button onClick={() => handleTabClick('account')} className=\"user-profile\">\r\n              <span>{username}</span>\r\n              <span>\r\n                <img src={profile_picture} alt=\"User Avatar\" />\r\n              </span>\r\n            </button>\r\n          </div>\r\n          {isMobile && (\r\n            <div>\r\n              <div className=\"dashboard-header-mobile\">\r\n                <MenuIcon onClick={handleMenuClick} />\r\n              </div>\r\n              <div className={`mobile-menu ${isMenuOpen ? 'open' : ''}`}>\r\n                {isMenuOpen && <CloseIcon onClick={handleMenuClick} />}\r\n                <button onClick={(event) => handleTabClick('overview', event)} className={activeTab === 'overview' ? 'active' : ''}>\r\n                  Overview\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('cards', event)} className={activeTab === 'cards' ? 'active' : ''}>\r\n                  Cards\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n                  Account\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n                  Store\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Header;\r\n"],"names":["id","userId","useParams","userData","setUserData","useState","cards","setCards","loading","setLoading","submissionSuccess","setSubmissionSuccess","navigate","useNavigate","useEffect","Cookie","get","axios","concat","process","withCredentials","then","response","data","catch","error","console","status","finally","_jsxs","className","children","_jsx","Header","Object","keys","length","CreateCard","map","card","CardComponent","card_id","props","event","activeTab","isMenuOpen","setMenuOpen","isMobile","window","innerWidth","menuRef","useRef","username","localStorage","getItem","profile_picture","handleOutsideClick","current","contains","target","handleSwipe","changedTouches","clientX","document","addEventListener","removeEventListener","handleMenuClick","handleTabClick","tab","src","alt","onClick","href","MenuIcon","CloseIcon"],"sourceRoot":""}