{"version":3,"file":"static/js/898.d90be87e.chunk.js","mappings":"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","sources":["components/Modal/Modal.js","pages/Card/CardComponent/CardComponent.js","pages/Dashboard/CreateCard/uploadModal/UploadModal.js","pages/Dashboard/CreateCard/CreateCard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './Modal.css'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst Modal = ({ isOpen, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    company: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const {id: userId} = useParams()\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n  axios.post(`https://${process.env.REACT_APP_HOST}/api/${userId}/message`, formData)\r\n  .then((res) => {\r\n    console.log('Response Headers:', res.headers);\r\n    if (res.status === 200) {\r\n      alert(\"Message sent successfully\");\r\n      setFormData({\r\n        name: '',\r\n        company: '',\r\n        email: '',\r\n        message: ''\r\n      });\r\n    }\r\n  })\r\n  .catch((err) => {\r\n    console.log(err.response.status);\r\n    console.log(err);\r\n  });\r\n\r\n\r\n    // Add your logic to handle form submission\r\n    console.log('Form submitted:', formData);\r\n    onClose(); // Close the modal after submission\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={onClose}>\r\n              X\r\n            </button>\r\n            <h2>GET IN TOUCH</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder='Name'\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n               <label htmlFor=\"company\">Company:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"company\"\r\n                name=\"company\"\r\n                placeholder='Company'\r\n                value={formData.company}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder='Email'\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"message\">Message:</label>\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                placeholder='What would you like to say?'\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { S3, GetObjectCommand } from '@aws-sdk/client-s3';\r\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\r\nimport vcf from 'vcf';\r\nimport { openDB } from 'idb';\r\nimport unorm from 'unorm';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport GoogleReviewsLogo from './Logos/googlereview.png';\r\nimport './CardComponent.css';\r\n\r\n\r\nconst  FacebookLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-facebook.svg?v=1712083465';\r\nconst InstagramLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-instagram.svg?v=1712083465';\r\nconst LinkedInLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-linkedin.svg?v=1712083465';\r\nconst UrlLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/url.png?v=1712083467';\r\nconst MapsLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-google-maps-old.svg?v=1712083465';\r\nconst YouTubeLogo = \"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-youtube.svg?v=1712083465\";\r\nconst PaypalLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-paypal.svg?v=1712083465'\r\nconst TiktokLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/tiktok.png?v=1713213933'\r\nconst TwitterLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-twitterx.svg?v=1712083465'\r\nconst SpotifyLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/spotify.png?v=1712083467'\r\nconst VintedLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/vinted.jpg?v=1712083466'\r\nconst NotesLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/notes.png?v=1713213932'\r\nconst StandvirtualLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/standvirtual.png?v=1713213933'\r\nconst OlxLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/olx.png?v=1713213932'\r\nconst PiscapiscaLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/piscapisca.png?v=1713213932'\r\nconst CustojustoLogo = 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/custojusto.png?v=1713213932'\r\n\r\n\r\n\r\nfunction CardComponent({\r\n  card_id,\r\n  id,\r\n  email,\r\n  username,\r\n  phone,\r\n  company,\r\n  title,\r\n  profile_image_url,\r\n  background_image_url,\r\n  onLoad,\r\n  facebook,\r\n  linkedin,\r\n  instagram,\r\n  google_reviews,\r\n  address,\r\n  youtube,\r\n  notes,\r\n  url,\r\n  paypal,\r\n  tiktok,\r\n  twitter,\r\n  spotify,\r\n  vinted,\r\n  standvirtual,\r\n  olx,\r\n  piscapisca,\r\n  custojusto\r\n}) {\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const accessKeyId = process.env.REACT_APP_AWS_ACCESS_KEY_ID;\r\n  const secretAccessKey =  process.env.REACT_APP_AWS_SECRET_ACCESS_KEY;\r\n  const Region =  process.env.REACT_APP_S3_REGION;\r\n  const Bucket =  process.env.REACT_APP_BUCKET;\r\n  let mapsUrl;\r\n\r\n  useEffect(() => {\r\n  \r\n    let isMounted = true;\r\n  \r\n    const loadImageAndSetState = async () => {\r\n  \r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n  \r\n      if (isMounted) {\r\n        if (imageBuffer) {\r\n          const blob = new Blob([imageBuffer], { type: 'image/jpg' });\r\n          setImage(blob);\r\n          setLoading(false);\r\n        } else {\r\n          fetchImage();\r\n        }\r\n      }\r\n    };\r\n  \r\n    loadImageAndSetState();\r\n  \r\n    return () => {\r\n      isMounted = false;\r\n  \r\n      if (image) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  \r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const openGoogleMaps = () => {\r\n    // Construct the Google Maps URL with the address as a query parameter\r\n     mapsUrl = `https://www.google.com/maps/search/?api=1&query=${address}`;\r\n\r\n    // Open a new window or tab with the Google Maps URL\r\n    window.open(mapsUrl, '_blank');\r\n  };\r\n  const initIndexedDB = async () => {\r\n    try {\r\n      const db = await openDB('brava-db', 1, {\r\n        upgrade(db) {\r\n          if (!db.objectStoreNames.contains('images')) {\r\n            const imagesStore = db.createObjectStore('images', { keyPath: 'key' });\r\n            imagesStore.createIndex('url', 'url', { unique: true });\r\n          }\r\n        },\r\n      });\r\n      return db;\r\n    } catch (error) {\r\n      console.error('Error initializing IndexedDB:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const saveImageToIndexedDB = async (imageBlob) => {\r\n    try {\r\n      const db = await initIndexedDB();\r\n      const tx = db.transaction('images', 'readwrite');\r\n      const store = tx.objectStore('images');\r\n  \r\n      // Use a unique key, such as the S3 key, assuming it's unique for each image\r\n      const key = 'profileImage';\r\n      \r\n      // Create an object with a URL (if needed) and the image data\r\n      const data = {\r\n        key,\r\n        url: profile_image_url,  // Add the URL if it's necessary for your use case\r\n        data: imageBlob,\r\n      };\r\n  \r\n      // Store the data in IndexedDB\r\n      store.put(data);\r\n  \r\n      // Complete the transaction\r\n      await tx.complete;\r\n      \r\n      console.log('Image stored in IndexedDB:', data);\r\n    } catch (error) {\r\n      console.error('Error storing image in IndexedDB:', error);\r\n    }\r\n  };\r\n\r\n  const loadImageFromIndexedDB = async () => {\r\n    try {\r\n      const db = await initIndexedDB();\r\n      const tx = db.transaction('images');\r\n      const store = tx.objectStore('images');\r\n      const entry = await store.get('profileImage');\r\n  \r\n      return entry ? entry.data : null;\r\n    } catch (error) {\r\n      console.error('Error loading from IndexedDB:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchImage = async () => {\r\n    try {\r\n      const s3Client = new S3({\r\n        credentials: {\r\n          accessKeyId,\r\n          secretAccessKey,\r\n        },\r\n        region: Region,\r\n      });\r\n  \r\n      // Parse the profile_image_url to extract the S3 key\r\n      const urlObject = new URL(profile_image_url);\r\n      const key = decodeURIComponent(urlObject.pathname.replace(/^\\//, ''));\r\n  \r\n      const getObjectParams = {\r\n        Bucket,\r\n        Key: key,\r\n      };\r\n  \r\n      const command = new GetObjectCommand(getObjectParams);\r\n      const response = await s3Client.send(command);\r\n  \r\n     \r\n  \r\n      const blob = new Blob([response.Body], { type: response.ContentType });\r\n      saveImageToIndexedDB(blob);\r\n      // Save the image Blob directly to the state\r\n      setImage(blob);\r\n      setLoading(false);\r\n  \r\n      if (onLoad) {\r\n        onLoad();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching image:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const loadImageAndSetState = async () => {\r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n\r\n      if (imageBuffer) {\r\n        const blob = new Blob([imageBuffer], { type: 'image/jpg' });\r\n        setImage(blob);\r\n        setLoading(false);\r\n      } else {\r\n        fetchImage();\r\n      }\r\n    };\r\n\r\n    loadImageAndSetState();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n\r\n      if (image) {\r\n        URL.revokeObjectURL(image);\r\n      }\r\n    };\r\n  }, [profile_image_url, Bucket, Region, accessKeyId, secretAccessKey, onLoad]);\r\n\r\n\r\n\r\n  const saveToContacts = async () => {\r\n    try {\r\n      const card = new vcf();\r\n      const imageBuffer = await loadImageFromIndexedDB();\r\n  \r\n      if (!imageBuffer) {\r\n        console.error('Image not found in IndexedDB.');\r\n        return;\r\n      }\r\n  \r\n      // Set basic properties\r\n  \r\n      // Manually encode special characters in the names\r\n      const removeDiacritics = (str) => unorm.nfkd(str).replace(/[\\u0300-\\u036f]/g, '');\r\n      const decodedUsername = removeDiacritics(decodeURIComponent(username));\r\n      const decodedTitle = removeDiacritics(decodeURIComponent(title));\r\n      const decodedNotes = removeDiacritics(decodeURIComponent(notes))\r\n      const decodedAddress = removeDiacritics(decodeURIComponent(address))\r\n      // Set structured name with properly encoded values\r\n      card.add('n', [decodedUsername]);\r\n  \r\n      // Set formatted name with the full, properly encoded name\r\n      card.add('fn', [decodedUsername]);\r\n  \r\n      card.add('org', company);\r\n      card.add('tel', phone);\r\n      card.add('email', email);\r\n  \r\n      // Set additional properties\r\n      card.add('title', [decodedTitle]);\r\n      card.add('url', `https://app.bravanfc.com/${id}/cards/${card_id}`);\r\n  \r\n      // Set social media properties\r\n      if (facebook) {\r\n        card.add('x-socialprofile', facebook, { type: 'Facebook' });\r\n      }\r\n      if (instagram) {\r\n        card.add('x-socialprofile', instagram, { type: 'Instagram' });\r\n      }\r\n      if (linkedin) {\r\n        card.add('x-socialprofile', linkedin, { type: 'Linkedin' });\r\n      }\r\n      if (youtube) {\r\n        card.add('x-socialprofile', youtube, { type: 'Youtube' });\r\n      }\r\n      if(notes) {\r\n        card.add('note', [decodedNotes])\r\n      }\r\n      if(twitter){\r\n        card.add('x-socialprofile', twitter, {type: 'Twitter'});\r\n      }\r\n      if(paypal){\r\n        card.add('x-socialprofile', paypal, {type: \"Paypal\"});\r\n      }\r\n      if(tiktok){\r\n        card.add('x-socialprofile', tiktok, {type: \"TikTok\"});\r\n      }\r\n      if(spotify){\r\n        card.add('x-socialprofile', spotify, {type: \"Spotify\"});\r\n      }\r\n      if(vinted){\r\n        card.add('x-socialprofile', vinted, {type: \"Vinted\"});\r\n      }\r\n      if(olx){\r\n        card.add('x-social-profile', olx ,{type:\"Olx\"});\r\n      }\r\n      if(standvirtual){\r\n        card.add('x-social-profile', standvirtual ,{type:\"standvirtual\"});\r\n      }\r\n      if(piscapisca){\r\n        card.add('x-social-profile', piscapisca ,{type:\"piscapisca\"});\r\n      }\r\n      if(custojusto){\r\n        card.add('x-social-profile', custojusto ,{type:\"custojusto\"});\r\n      }\r\n  \r\n  \r\n      // Set address\r\n      card.add('adr', [decodedAddress]);\r\n\r\n      // Extract the S3 key from the profile_image_url\r\n      const urlObject = new URL(profile_image_url);\r\n      const imageKey = decodeURIComponent(urlObject.pathname.replace(/^\\//, ''));\r\n  \r\n      // Generate a pre-signed URL for the image\r\n      const imageURL = await generatePresignedURL(imageKey);\r\n  \r\n      const encodedImage = await fetchAndEncodeImage(imageURL);\r\n      if (!encodedImage) {\r\n        console.error('Error fetching and encoding image.');\r\n        return;\r\n      }\r\n  \r\n      // Set image in vCard\r\n      card.add('photo', encodedImage, { encoding: 'b', type: 'image/jpeg' });\r\n  \r\n      // Generate vCard data as a string\r\n      const vCardData = card.toString('3.0');\r\n      console.log(vCardData);\r\n  \r\n      // Create a Blob from the vCard data with explicit UTF-8 encoding\r\n      const vcard_blob = new Blob([new TextEncoder().encode(vCardData)], {\r\n        type: 'text/vcard;charset=utf-8',\r\n      });\r\n  \r\n      // Open a new URL to prompt the user to add the contact\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = URL.createObjectURL(vcard_blob);\r\n      downloadLink.download = 'contact.vcf';\r\n  \r\n      // Trigger a click event to simulate a download prompt\r\n       // Redirect the user to the vCard file\r\n    window.location.href = URL.createObjectURL(vcard_blob);\r\n\r\n    // Release the object URL\r\n    URL.revokeObjectURL(vcard_blob);\r\n    } catch (error) {\r\n      console.error('Error saving to contacts:', error);\r\n    }\r\n  };\r\n  \r\n  // Function to fetch and encode the image\r\n  const fetchAndEncodeImage = async (imageUrl) => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const imageBlob = await response.blob();\r\n  \r\n      // Resize and compress the image with a lower quality\r\n      const resizedAndCompressedBase64 = await resizeAndCompressImage(imageBlob, {\r\n        maxWidth: 800,\r\n        maxHeight: 800,\r\n        quality: 0.9, // Adjust the quality as needed\r\n      });\r\n  \r\n      return resizedAndCompressedBase64;\r\n    } catch (error) {\r\n      console.error('Error fetching, resizing, and encoding image:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const resizeAndCompressImage = async (blob, options) => {\r\n    try {\r\n      const image = new Image();\r\n      image.src = URL.createObjectURL(blob);\r\n  \r\n      await new Promise((resolve, reject) => {\r\n        image.onload = resolve;\r\n        image.onerror = reject;\r\n      });\r\n  \r\n      const { maxWidth, maxHeight, quality } = options;\r\n  \r\n      let width = image.width;\r\n      let height = image.height;\r\n  \r\n      if (width > height) {\r\n        if (width > maxWidth) {\r\n          height *= maxWidth / width;\r\n          width = maxWidth;\r\n        }\r\n      } else {\r\n        if (height > maxHeight) {\r\n          width *= maxHeight / height;\r\n          height = maxHeight;\r\n        }\r\n      }\r\n  \r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const context = canvas.getContext('2d');\r\n  \r\n      // Draw the image on the canvas progressively\r\n      context.drawImage(image, 0, 0, width, height);\r\n  \r\n      // Convert the canvas content to a blob\r\n      const resizedBlob = await new Promise((resolve) => {\r\n        canvas.toBlob(resolve, 'image/jpeg', quality);\r\n      });\r\n  \r\n      // Convert the resized blob to base64\r\n      const resizedBlobBuffer = await new Response(resizedBlob).arrayBuffer();\r\n      const resizedBlobBase64 = btoa(\r\n        new Uint8Array(resizedBlobBuffer).reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n      );\r\n  \r\n      return resizedBlobBase64;\r\n    } catch (error) {\r\n      console.error('Error resizing and compressing image:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  const generatePresignedURL = async (imageKey) => {\r\n    try {\r\n      const s3Client = new S3({\r\n        region: 'eu-west-2',\r\n        credentials: {\r\n          accessKeyId: accessKeyId,\r\n          secretAccessKey: secretAccessKey,\r\n        },\r\n      });\r\n  \r\n      const params = {\r\n        Bucket: 'brava-bucket',\r\n        Key: imageKey,\r\n        Expires: 900,\r\n      };\r\n  \r\n      const signedURL =  getSignedUrl(s3Client, new GetObjectCommand(params));\r\n      console.log(signedURL)\r\n      return signedURL;\r\n    } catch (error) {\r\n      console.error('Error generating pre-signed URL:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleGetInTouch = () => {\r\n    try {\r\n      // Instead of triggering a download, open the modal\r\n      openModal();\r\n    } catch (error) {\r\n      console.error('Error opening modal:', error);\r\n    }\r\n  };\r\n  return (\r\n    <div className={`card-component ${loading ? 'loading' : ''}`}>\r\n      <div className=\"card-background\" style={{ backgroundImage: `url(${background_image_url|| 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/brava_Front4-removebg-preview.png?v=1712164655'})` }}></div>\r\n      <div className=\"card-component-header\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <>\r\n           <img className=\"card-image\" rel='preload' loading=\"lazy\" src={profile_image_url || 'https://cdn.shopify.com/s/files/1/0733/7767/7577/files/brava.jpg?v=1713204195'} alt=\"Profile\" />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5>{title}</h5>\r\n        <h3><span>{company}</span></h3>\r\n        <p>{username}</p>\r\n        <div className=\"card-buttons\">\r\n          <button onClick={saveToContacts}>SAVE CONTACT</button>\r\n        <button className=\"fab\" onClick={handleGetInTouch}>\r\n          EXCHANGE CONTACT\r\n        </button>\r\n        </div>\r\n        <div className=\"social-icons\">\r\n          {url && <a href={url}><img rel='preload' className=\"url\" loading=\"lazy\" src={UrlLogo} alt=\"Url\" focusable /></a>}\r\n          {google_reviews && <a href={google_reviews}><img rel='preload' loading=\"lazy\" src={GoogleReviewsLogo} alt=\"Instagram\" focusable /></a>}\r\n          {instagram && <a href={instagram}><img rel='preload' loading=\"lazy\"src={InstagramLogo} alt=\"Instagram\" focusable /></a>}\r\n          {facebook && <a href={facebook}><img rel='preload' loading=\"lazy\"src={FacebookLogo} alt=\"Facebook\" focusable /></a>}\r\n          {linkedin && <a href={linkedin}><img rel='preload' loading=\"lazy\"src={LinkedInLogo} alt=\"LinkedIn\" focusable /></a>}\r\n          {youtube && <a href={youtube}><img rel='preload' loading=\"lazy\"src={YouTubeLogo} alt=\"YouTube\" focusable /></a>}\r\n          {paypal &&<a href={paypal}><img rel='preload' loading=\"lazy\"src={PaypalLogo} alt=\"Paypal\" focusable /></a>}\r\n          {twitter &&<a href={twitter}><img rel='preload' loading=\"lazy\"src={TwitterLogo} alt=\"Twitter\" focusable /></a>}\r\n          {tiktok &&<a href={tiktok}><img rel='preload' loading=\"lazy\"src={TiktokLogo} alt=\"TikTok\" focusable /></a>}\r\n          {spotify &&<a  href={spotify}><img rel='preload' className='spotify' loading=\"lazy\"src={SpotifyLogo} alt=\"Spotify\" focusable /></a>}\r\n          {vinted &&<a  href={vinted}><img rel='preload' className='spotify' loading=\"lazy\"src={VintedLogo} alt=\"Vinted\" focusable /></a>}\r\n          {notes && <a  href={notes}><img rel='preload' loading=\"lazy\"style={{marginBottom: \"10px\"}} src={NotesLogo} alt=\"Notes\" focusable /></a>}\r\n          {address && <a href={mapsUrl} onClick={openGoogleMaps}><img rel='preload' loading='lazy' src={MapsLogo} alt='Maps' focusable/></a>}\r\n          {standvirtual && <a href={standvirtual} ><img rel='preload' loading='lazy' src={StandvirtualLogo} alt='standvirtual' focusable/></a>}\r\n          {olx && <a href={olx} ><img rel='preload' loading='lazy' src={OlxLogo} alt='olx' focusable/></a>}\r\n          {piscapisca && <a href={piscapisca} ><img rel='preload' loading='lazy' src={PiscapiscaLogo} alt='piscapisca' focusable/></a>}\r\n          {custojusto && <a href={custojusto} ><img rel='preload' loading='lazy' src={CustojustoLogo} alt='custojusto' focusable/></a>}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCardComponent.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n  company: PropTypes.string.isRequired,\r\n  profile_image_url: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  card_id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  facebook: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string.isRequired,\r\n  instagram: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CardComponent;","import React, { useState } from 'react';\r\nimport \"./UploadModal.scss\";\r\n\r\nconst UploadModal = ({ handleCloseModal }) => {\r\n  const [profilePictureLabel, setProfilePictureLabel] = useState('Upload Profile Picture');\r\n  const [backgroundImageLabel, setBackgroundImageLabel] = useState('Upload Background Image');\r\n\r\n  const handleImageChangeAndSave = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setProfilePictureLabel(file.name);\r\n      saveImageToLocalStorage(file, 'profileImageURL');\r\n    }\r\n  };\r\n  \r\n  const saveImageToLocalStorage = (file, localStorageKey) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      localStorage.setItem(localStorageKey, event.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  \r\n  \r\n  const handleImageChangesAndSave = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBackgroundImageLabel(file.name);\r\n      saveImageToLocalStorage(file, 'backgroundImageURL');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Reset old items in localStorage\r\n    localStorage.removeItem('profileImageUrl');\r\n    localStorage.removeItem('backgroundImageUrl');\r\n  \r\n    // Save new items to localStorage\r\n    const profilePictureFileInput = document.getElementById('profilePictureInput');\r\n    const backgroundImageFileInput = document.getElementById('backgroundImageInput');\r\n  \r\n    if (profilePictureFileInput && profilePictureFileInput.files.length > 0) {\r\n      const profilePictureFile = profilePictureFileInput.files[0];\r\n      localStorage.setItem('profileImageUrl', profilePictureFile.name); // Changed from 'profilePicture' to 'profileImageUrl'\r\n      console.log('Profile Picture saved to localStorage:', profilePictureFile.name);\r\n    }\r\n  \r\n    if (backgroundImageFileInput && backgroundImageFileInput.files.length > 0) {\r\n      const backgroundImageFile = backgroundImageFileInput.files[0];\r\n      localStorage.setItem('backgroundImageUrl', backgroundImageFile.name); // Changed from 'backgroundImage' to 'backgroundImageUrl'\r\n      console.log('Background Image saved to localStorage:', backgroundImageFile.name);\r\n    }\r\n  \r\n    handleCloseModal();\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"upload-modal\">\r\n      <button className=\"modal-close-button\" onClick={handleCloseModal}>\r\n        &times;\r\n      </button>\r\n      <h2 className=\"title\">Profile Picture</h2>\r\n      <h3 className=\"subtitle\">Upload your profile picture</h3>\r\n      <div className=\"profile-picture-container\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"profilePicture\"\r\n          id=\"profilePictureInput\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChangeAndSave}\r\n          className=\"file-input\"\r\n        />\r\n        <label htmlFor=\"profilePictureInput\" className=\"file-label\">\r\n          {profilePictureLabel}\r\n        </label>\r\n      </div>\r\n      <h2 className=\"title\">Background Image</h2>\r\n      <h3 className=\"subtitle\">Upload your background image</h3>\r\n      <div className=\"profile-picture-container\">\r\n        <input\r\n          type=\"file\"\r\n          name=\"backgroundImage\"\r\n          id=\"backgroundImageInput\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChangesAndSave}\r\n          className=\"file-input\"\r\n        />\r\n        <label htmlFor=\"backgroundImageInput\" className=\"file-label\">\r\n          {backgroundImageLabel}\r\n        </label>\r\n      </div>\r\n      <input\r\n        type=\"button\"\r\n        name=\"submit\"\r\n        className=\"submit action-button\"\r\n        value=\"Submit\"\r\n        onClick={handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import React, { useState, useEffect , useMemo} from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport \"./CreateCard.scss\";\r\nimport UploadModal from './uploadModal/UploadModal';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport CardComponent from '../../../pages/Card/CardComponent/CardComponent';\r\n\r\nconst CreateCard = () => {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [profilePictureLabel, setProfilePictureLabel] = useState('Profile Picture');\r\n  const [backgroundImageLabel, setBackgroundImageLabel] = useState('Background Image');\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    company: '',\r\n    phone: '',\r\n    position: '',\r\n    instagram: '',\r\n    url: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    image: '',\r\n    background_image: '',\r\n    tiktok:'',\r\n    spotify:'',\r\n    twitter:'',\r\n    paypal:'',\r\n    vinted:'',\r\n    notes:'',\r\n    standvirtual:'',\r\n    olx:'',\r\n    piscapisca:'',\r\n    custojusto:''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const { id: id } = useParams();\r\n  const createcardKey = useMemo(() => `${formData.profilePicture}-${formData.background_image}`, [formData.profilePicture, formData.background_image]);\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Load the saved data from local storage on component mount\r\n    const savedFormData = JSON.parse(localStorage.getItem('formData'));\r\n    if (savedFormData) {\r\n      setFormData(savedFormData);\r\n    }\r\n\r\n    // Load images from local storage\r\n    const profilePicture = localStorage.getItem('profileImageURL');\r\n    const backgroundImage = localStorage.getItem('backgroundImageURL');\r\n\r\n    if (profilePicture) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        profilePicture: profilePicture,\r\n      }));\r\n    }\r\n\r\n    if (backgroundImage) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        background_image: backgroundImage,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // Open Modal\r\n  const openUploadModal = () => {\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowUploadModal(false);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const inputName = e.target.name;\r\n      if (inputName === 'profilePicture') {\r\n        setProfilePictureLabel(file.name);\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          localStorage.setItem('profileImageURL', event.target.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else if (inputName === 'backgroundImage') {\r\n        setBackgroundImageLabel(file.name);\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          localStorage.setItem('backgroundImageURL', event.target.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageChanges = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBackgroundImageLabel(file.name);\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        background_image: file.name,\r\n      }));\r\n    } else {\r\n      setBackgroundImageLabel('Background Image');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setCurrentStep(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const formDataToSubmit = new FormData();\r\n    formDataToSubmit.append('name', formData.name);\r\n    formDataToSubmit.append('email', formData.email);\r\n    formDataToSubmit.append('company', formData.company);\r\n    formDataToSubmit.append('position', formData.position);\r\n    formDataToSubmit.append('phone', formData.phone);\r\n    formDataToSubmit.append('instagram', formData.instagram);\r\n    formDataToSubmit.append('facebook', formData.facebook);\r\n    formDataToSubmit.append('linkedin', formData.linkedin);\r\n    formDataToSubmit.append('url', formData.url);\r\n    formDataToSubmit.append('userId', id);\r\n    formDataToSubmit.append('tiktok', formData.tiktok);\r\n    formDataToSubmit.append('spotify', formData.spotify);\r\n    formDataToSubmit.append('twitter', formData.twitter);\r\n    formDataToSubmit.append('paypal', formData.paypal);\r\n    formDataToSubmit.append('vinted', formData.vinted);\r\n    formDataToSubmit.append('notes', formData.notes);\r\n    formDataToSubmit.append('standvirtual', formData.standvirtual);\r\n    formDataToSubmit.append('olx', formData.olx);\r\n    formDataToSubmit.append('piscapisca', formData.piscapisca);\r\n    formDataToSubmit.append('custojusto', formData.custojusto);\r\n  \r\n    // Append profile image data\r\n    const profilePictureFileName = localStorage.getItem('profileImageUrl');\r\n    if (profilePictureFileName) {\r\n      console.log('Profile Picture:', profilePictureFileName);\r\n      formDataToSubmit.append('profilePicture', profilePictureFileName);\r\n    }\r\n  \r\n    // Append background image file from localStorage if it exists\r\n    const backgroundImageFileName = localStorage.getItem('backgroundImage');\r\n    if (backgroundImageFileName) {\r\n      console.log('Background Image:', backgroundImageFileName);\r\n      formDataToSubmit.append('background_image', backgroundImageFileName);\r\n    }\r\n  \r\n    // Log the form data\r\n    console.log('Form Data:', formDataToSubmit);\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        `https://${process.env.REACT_APP_HOST}/api//api/createcard`,\r\n        formDataToSubmit,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n  \r\n      if (response.status === 201 || response.status === 204) {\r\n        localStorage.removeItem('formData');\r\n        localStorage.removeItem('profileImageURL');\r\n        localStorage.removeItem('backgroundImageURL');\r\n        navigate(`/${response.data.userId}/dashboard/cards`);\r\n      } else {\r\n        console.error(\"Error creating card:\", response.data);\r\n        alert('Error creating card')\r\n        // Handle the error (e.g., show an error message to the user)\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error creating card\", err);\r\n      alert(\"There was an error creating your card\", err);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className='createcard-container'>\r\n      <div className=\"msform\">\r\n        {/* Modal for uploading profile picture and background image */}\r\n        {showUploadModal && (\r\n          <UploadModal\r\n            handleImageChange={handleImageChange}\r\n            handleImageChanges={handleImageChanges}\r\n            handleCloseModal={handleCloseModal}\r\n            handleSubmit={handleSubmit} \r\n            handlePrevious={() => setShowUploadModal(false)} // Close modal on previous button click\r\n          />\r\n        )}\r\n        <div className='createcard-container'>\r\n          <div className=\"card-content\">\r\n            <div className=\"side-navigation\">\r\n              <ul>\r\n                <li className={currentStep >= 1 ? 'active' : ''}>Card Setup</li>\r\n                <li className={currentStep >= 2 ? 'active' : ''}>Social Media</li>\r\n              \r\n              </ul>\r\n            </div>\r\n            <div className=\"msform\">\r\n              <form id=\"msform\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                {currentStep === 1 && (\r\n                  <fieldset>\r\n                    <h2 className=\"fs-title\">Setup your data</h2>\r\n                    <p className='fs-subtitle'>We'll guide you through the process of adding the data displayed in your card</p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleInputChange} required />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleInputChange} required />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Phone</label>\r\n                        <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" value={formData.phone} onChange={handleInputChange} required />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <label>Company</label>\r\n                        <input type=\"text\" name=\"company\" placeholder=\"Company (optional)\" value={formData.company} onChange={handleInputChange} />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label>Position</label>\r\n                        <input type=\"text\" name=\"position\" placeholder=\"Position (optional)\" value={formData.position} onChange={handleInputChange} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col\" >\r\n                        <label>Address</label>\r\n                        <input type=\"text\" name=\"address\" placeholder=\"Address\" value={formData.address} onChange={handleInputChange} style={{ float: 'left' }} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"profile-picture-container\">\r\n                        <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/upload.png?v=1713209450\" alt=\"Upload Icon\" className=\"upload-icon\" />\r\n                        <input\r\n                          name=\"profilePicture\"\r\n                          id=\"profilePictureInput\"\r\n                          onChange={handleImageChange}\r\n                          className=\"file-input\"\r\n                          onClick={openUploadModal}\r\n                        />\r\n                        <label htmlFor=\"profilePictureInput\" className=\"file-label\">\r\n                          {profilePictureLabel}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <input type=\"button\" name=\"next\" className=\"next action-button\" value=\"Next\" onClick={handleNext} />\r\n                    </div>\r\n                  </fieldset>\r\n                )}\r\n                {currentStep === 2 && (\r\n                  <fieldset>\r\n                    <h2 className=\"fs-title\">Social Profiles</h2>\r\n                    <h3 className=\"fs-subtitle\">Your presence on the social network</h3>\r\n\r\n                    <div className=\"social-input-container-wrapper\">\r\n                    <div className=\"social-input-container\">\r\n                      <div className=\"social-input\">\r\n                        <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-instagram.svg?v=1712083465\" className='social' alt=\"Instagram\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"instagram\"\r\n                          placeholder=\"Instagram\"\r\n                          value={formData.instagram}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-facebook.svg?v=1712083465' className='social' alt=\"Facebook\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"facebook\"\r\n                          placeholder=\"Facebook\"\r\n                          value={formData.facebook}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/icons8-linkedin.svg?v=1712083465' className='social' alt=\"LinkedIn\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"linkedin\"\r\n                          placeholder=\"Linkedin\"\r\n                          value={formData.linkedin}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/url.png?v=1712083467' className='social' alt=\"URL\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"url\"\r\n                          placeholder=\"Url\"\r\n                          value={formData.url}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                       <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/tiktok.png?v=1713213933' className='social' alt=\"tiktok\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"tiktok\"\r\n                          placeholder=\"tiktok\"\r\n                          value={formData.tiktok}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/spotify_bcf3311d-41be-49a9-8cec-d1bdc9363c4d.png?v=1713213932' className='social' alt=\"Spotify\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"spotify\"\r\n                          placeholder=\"spotify\"\r\n                          value={formData.spotify}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      \r\n                   \r\n                    </div>\r\n                    <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/twitter.svg?v=1713213932' className='social' alt=\"Twitter\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"twitter\"\r\n                          placeholder=\"Twitter\"\r\n                          value={formData.twitter}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/paypal.png?v=1713213933' className='social' alt=\"paypal\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"paypal\"\r\n                          placeholder=\"paypal\"\r\n                          value={formData.paypal}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/Vinted.png?v=1713213932' className='social' alt=\"vinted\" style={{width:\"100px\", height:\"60px\",marginRight:\"-20px\",marginLeft:\"-20px\"}}/>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"vinted\"\r\n                          placeholder=\"vinted\"\r\n                          value={formData.vinted}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/standvirtual.png?v=1713213933' className='social' alt=\"standvirtual\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"standvirtual\"\r\n                          placeholder=\"standvirtual\"\r\n                          value={formData.standvirtual}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/olx.png?v=1713213932' className='social' alt=\"olx\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"olx\"\r\n                          placeholder=\"olx\"\r\n                          value={formData.olx}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/piscapisca.png?v=1713213932' className='social' alt=\"piscapisca\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"piscapisca\"\r\n                          placeholder=\"piscapisca\"\r\n                          value={formData.piscapisca}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/custojusto.png?v=1713213932' className='social' alt=\"custojusto\" style={{width:\"100px\", height:\"60px\",marginRight:\"-35px\",marginLeft:\"-20px\"}} />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"custojusto\"\r\n                          placeholder=\"custojusto\"\r\n                          value={formData.custojusto}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"social-input\">\r\n                        <img src='https://cdn.shopify.com/s/files/1/0733/7767/7577/files/notes.png?v=1713213932' className='social' alt=\"notes\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"notes\"\r\n                          placeholder=\"notes\"\r\n                          value={formData.notes}\r\n                          onChange={handleInputChange}\r\n                        />\r\n                      </div>\r\n                    \r\n                      </div>\r\n\r\n                    <input\r\n                      type=\"button\"\r\n                      name=\"previous\"\r\n                      className=\"previous action-button\"\r\n                      value=\"Previous\"\r\n                      onClick={handlePrevious}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"next action-button\"\r\n                      value=\"Submit\"\r\n                      onClick={handleSubmit}\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n                \r\n              </form>\r\n            </div>\r\n            <div className=\"createcard-component\">\r\n              {/* Render CardComponent here */}\r\n              <CardComponent\r\n               key={createcardKey}// Added key prop to force rerender when images change\r\n                email={formData.email}\r\n                username={formData.name}\r\n                phone={formData.phone}\r\n                company={formData.company}\r\n                title={formData.position}\r\n                instagram={formData.instagram}\r\n                facebook={formData.facebook}\r\n                linkedin={formData.linkedin}\r\n                url={formData.url}\r\n                notes={formData.notes}\r\n                background_image_url={formData.background_image}\r\n                profile_image_url={formData.profilePicture}\r\n                address={formData.address}\r\n                tiktok={formData.tiktok}\r\n                spotify={formData.spotify}\r\n                twitter={formData.twitter}\r\n                paypal={formData.paypal}\r\n                vinted={formData.vinted}\r\n                standvirtual={formData.standvirtual}\r\n                olx={formData.olx}\r\n                piscapisca={formData.piscapisca}\r\n                custojusto={formData.custojusto}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCard;\r\n"],"names":["_ref","isOpen","onClose","formData","setFormData","useState","name","company","email","message","id","userId","useParams","handleChange","e","value","target","prevData","_jsx","_Fragment","children","className","_jsxs","onClick","onSubmit","preventDefault","axios","post","concat","process","then","res","console","log","headers","status","alert","catch","err","response","htmlFor","type","placeholder","onChange","required","card_id","username","phone","title","profile_image_url","background_image_url","onLoad","facebook","linkedin","instagram","google_reviews","address","youtube","notes","url","paypal","tiktok","twitter","spotify","vinted","standvirtual","olx","piscapisca","custojusto","image","setImage","loading","setLoading","isModalOpen","setIsModalOpen","accessKeyId","secretAccessKey","Region","Bucket","mapsUrl","useEffect","isMounted","async","imageBuffer","loadImageFromIndexedDB","blob","Blob","fetchImage","loadImageAndSetState","URL","revokeObjectURL","initIndexedDB","openDB","upgrade","db","objectStoreNames","contains","createObjectStore","keyPath","createIndex","unique","error","store","transaction","objectStore","entry","get","data","s3Client","S3","credentials","region","urlObject","key","decodeURIComponent","pathname","replace","getObjectParams","Key","command","GetObjectCommand","send","Body","ContentType","tx","imageBlob","put","complete","saveImageToIndexedDB","fetchAndEncodeImage","fetch","imageUrl","resizeAndCompressImage","maxWidth","maxHeight","quality","options","Image","src","createObjectURL","Promise","resolve","reject","onload","onerror","width","height","canvas","document","createElement","getContext","drawImage","resizedBlob","toBlob","resizedBlobBuffer","Response","arrayBuffer","btoa","Uint8Array","reduce","byte","String","fromCharCode","generatePresignedURL","params","imageKey","Expires","signedURL","getSignedUrl","style","backgroundImage","rel","alt","card","vcf","removeDiacritics","str","unorm","decodedUsername","decodedTitle","decodedNotes","decodedAddress","add","imageURL","encodedImage","encoding","vCardData","toString","vcard_blob","TextEncoder","encode","downloadLink","href","download","window","location","handleGetInTouch","focusable","GoogleReviewsLogo","marginBottom","openGoogleMaps","open","Modal","closeModal","handleCloseModal","profilePictureLabel","setProfilePictureLabel","backgroundImageLabel","setBackgroundImageLabel","saveImageToLocalStorage","file","localStorageKey","reader","FileReader","event","localStorage","setItem","result","readAsDataURL","accept","files","handleSubmit","removeItem","profilePictureFileInput","getElementById","backgroundImageFileInput","length","profilePictureFile","backgroundImageFile","CreateCard","currentStep","setCurrentStep","showUploadModal","setShowUploadModal","position","background_image","navigate","useNavigate","createcardKey","useMemo","profilePicture","Cookie","savedFormData","JSON","parse","getItem","handleImageChange","inputName","handleInputChange","formDataToSubmit","FormData","append","profilePictureFileName","backgroundImageFileName","withCredentials","UploadModal","handleImageChanges","handlePrevious","encType","float","openUploadModal","handleNext","marginRight","marginLeft","CardComponent"],"sourceRoot":""}