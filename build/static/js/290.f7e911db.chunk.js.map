{"version":3,"file":"static/js/290.f7e911db.chunk.js","mappings":"sKAIA,MAAMA,GAAgBC,EAAAA,EAAAA,OAAK,IAAM,iEA+DjC,QA7DA,WACE,MAAQC,GAAIC,IAAWC,EAAAA,EAAAA,OAChBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAgCvC,OA9BAK,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAIX,GACZY,EAAAA,EACGC,IAAI,6BAADC,OAA8Bd,EAAM,UAAU,CAAEe,iBAAiB,IACpEC,MAAMC,IACLd,EAAYc,EAASC,MACrBZ,EAASW,EAASC,KAAKb,OAGFY,EAASC,KAAKb,MAAMc,KAAKC,GAASA,EAAKC,oBAE/CC,SAASC,IACpB,MAAMC,EAAcC,SAASC,cAAc,QAC3CF,EAAYG,KAAOJ,EACnBC,EAAYI,IAAM,UAClBJ,EAAYK,GAAK,QACjBJ,SAASK,KAAKC,YAAYP,EAAY,GACtC,IAEHQ,OAAOC,IACNvB,QAAQuB,MAAM,wBAAyBA,EAAM,IAE9CC,SAAQ,KACP1B,GAAW,EAAM,GACjB,GAGH,CAACR,IAGAO,GAEA4B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAACC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAOtDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SACnBhC,EAAMc,KAAKC,IACVkB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAoBC,UAAUF,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBAAsBA,UAChEC,EAAAA,EAAAA,KAACzC,EAAa,IAAKuB,KADNA,EAAKqB,gBAQhC,C","sources":["pages/Card/Card.js"],"sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport './Card.scss';\r\nconst CardComponent = lazy(() => import('./CardComponent/CardComponent'));\r\n\r\nfunction Cards() {\r\n  const { id: userId } = useParams();\r\n  const [userData, setUserData] = useState(null); // Initialize as null\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(userId)\r\n    axios\r\n      .get(`http://localhost:4001/api/${userId}/cards`, { withCredentials: true })\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setCards(response.data.cards);\r\n  \r\n        // Preload LCP image\r\n        const lcpImageUrls = response.data.cards.map((card) => card.profile_image_url);\r\n  \r\n        lcpImageUrls.forEach((imageUrl) => {\r\n          const preloadLink = document.createElement('link');\r\n          preloadLink.href = imageUrl;\r\n          preloadLink.rel = 'preload';\r\n          preloadLink.as = 'image';\r\n          document.head.appendChild(preloadLink);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cards:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      });\r\n\r\n\r\n  }, [userId]);\r\n\r\n  // Render loading indicator while data is being fetched\r\n  if (loading) {\r\n    return (\r\n      <div className=\"cards-container\">\r\n        <h1>Loading...</h1>\r\n        <div className=\"spinner-container\"><div className=\"spinner\"></div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Once data is fetched, render the page with the fetched data\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <div className=\"nav-tiles\">\r\n        <div className=\"tiles\">\r\n          {cards.map((card) => (\r\n            <Suspense key={card.card_id} fallback={<div>Loading card...</div>}>\r\n              <CardComponent {...card} />\r\n            </Suspense>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n"],"names":["CardComponent","lazy","id","userId","useParams","userData","setUserData","useState","cards","setCards","loading","setLoading","useEffect","console","log","axios","get","concat","withCredentials","then","response","data","map","card","profile_image_url","forEach","imageUrl","preloadLink","document","createElement","href","rel","as","head","appendChild","catch","error","finally","_jsxs","className","children","_jsx","Suspense","fallback","card_id"],"sourceRoot":""}