{"version":3,"file":"static/js/49.fa7af03e.chunk.js","mappings":"qKA2GA,QArGA,SAA8BA,GAa1B,IAb2B,MAC7BC,EAAK,QACLC,EAAO,MACPC,EAAK,SACLC,EAAQ,QACRC,EAAO,MACPC,EAAK,OACLC,EAAM,SACNC,EAAQ,SACRC,EAAQ,UACRC,EAAS,IACTC,EAAG,kBACHC,GACDZ,EACC,MAAOa,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,OAClCK,GAAIC,IAAUC,EAAAA,EAAAA,MAyCrB,OAtCAC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,QAAiBC,MAAM,IAADC,OAAKN,EAAM,eACvCF,EAAYM,EAASG,KACvB,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,GA0BFG,GAvBmBR,WACjB,IACE,MAAMC,QAAiBC,MAAM,WAADC,OAAYM,mBAAmBrB,KAE3D,IAAKa,EAASS,GACZ,MAAM,IAAIC,MAAM,0BAADR,OAA2BF,EAASW,SAGrD,MAAMC,QAAaZ,EAASY,OAEtBrB,EAAWsB,IAAIC,gBAAgBF,GACrCpB,EAAYD,GAEZF,GAAW,GAEPP,GACFA,EAAOS,EAEX,CAAE,MAAOwB,GACPV,QAAQU,MAAM,wBAAyBA,EACzC,GAIFC,EAAY,GACX,CAAC7B,EAAmBL,EAAQc,KAI7BqB,EAAAA,EAAAA,KAAA,OAAKC,MAAM,SAAQC,UAEnBC,EAAAA,EAAAA,MAAA,OAAKF,MAAM,gBAAeC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,MAAM,aAAYC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,MAAM,YAAWC,UACpBF,EAAAA,EAAAA,KAAA,OAAKI,IAAKlC,SAGd8B,EAAAA,EAAAA,KAAA,OAAKC,MAAM,UAASC,UACpBC,EAAAA,EAAAA,MAAA,OAAKF,MAAM,YAAWC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKvC,KACLqC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,SAAQC,UACjBF,EAAAA,EAAAA,KAAA,QAAAE,SAAOtC,OAEToC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,SAAQC,UACjBF,EAAAA,EAAAA,KAAA,QAAAE,SAAOxC,eAQnB,EC7CA,QArCA,WACE,MAAQgB,GAAIC,IAAWC,EAAAA,EAAAA,OAChByB,EAAOC,IAAYjC,EAAAA,EAAAA,UAAS,IAuBnC,OArBAQ,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMyB,QAAqBC,EAAAA,EAAMC,IAAI,WAADxB,OAAYyB,eAA0B,cAAAzB,OAAaN,EAAM,WACvFgC,EAAWJ,EAAarB,KAE9BE,QAAQC,IAAI,aAAcsB,GAEE,MAAxBJ,EAAab,OACfY,EAASK,EAASN,OAAS,IAE3BjB,QAAQU,MAAMa,EAASC,QAE3B,CAAE,MAAOd,GACPV,QAAQU,MAAM,uBAAwBA,EACxC,GAGFe,EAAW,GACV,CAAClC,EAAQ2B,IACZlB,QAAQC,IAAIgB,IAEVF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,yBAAwBZ,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAAE,UACAF,EAAAA,EAAAA,KAAA,MAAIc,UAAU,gBAAeZ,SAAC,kBAE/BG,EAAMU,KAAKC,IACPhB,EAAAA,EAAAA,KAACiB,EAAqB,IAAwBD,GAAlBA,EAAKxD,aAI1C,C","sources":["components/ExtendedCardComponent/ExtendedCardComponent.js","components/ProfileCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport \"./ExtendedCardComponent.scss\";\r\n\r\nfunction ExtendedCardComponent({\r\n  email,\r\n  card_id,\r\n  phone,\r\n  username,\r\n  company,\r\n  title,\r\n  onLoad,\r\n  facebook,\r\n  linkedin,\r\n  instagram,\r\n  url,\r\n  profile_image_url,\r\n}) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [userData, setUserData] = useState(null)\r\n  const {id: userId} = useParams()\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchUserdata = async () => {\r\n      try {\r\n        const response = await fetch(`/${userId}/dashboard`);\r\n        setUserData(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n  \r\n    const fetchImage = async () => {\r\n      try {\r\n        const response = await fetch(`/images/${encodeURIComponent(profile_image_url)}`);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch image: ${response.status}`);\r\n        }\r\n  \r\n        const blob = await response.blob();\r\n  \r\n        const imageUrl = URL.createObjectURL(blob);\r\n        setImageUrl(imageUrl);\r\n  \r\n        setLoading(false);\r\n  \r\n        if (onLoad) {\r\n          onLoad(imageUrl);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching image:', error);\r\n      }\r\n    };\r\n  \r\n    fetchUserdata();\r\n    fetchImage();\r\n  }, [profile_image_url, onLoad, userId]);\r\n \r\n\r\n  return (\r\n    <div class=\"center\">\r\n\r\n    <div class=\"extended-card\">\r\n      <div class=\"additional\">\r\n        <div class=\"user-card\">\r\n          <img src={profile_image_url}/>\r\n        </div>\r\n      </div>\r\n      <div class=\"general\">\r\n      <div class=\"more-info\">\r\n          <h1>{company}</h1>\r\n          <div class=\"coords\">\r\n            <span>{title}</span>\r\n          </div>\r\n          <div class=\"coords\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  </div>\r\n  );\r\n}\r\n\r\nExtendedCardComponent.propTypes = {\r\n  cardData: PropTypes.object,\r\n  onSaveContact: PropTypes.func.isRequired,\r\n  onExchangeContact: PropTypes.func.isRequired,\r\n  company: PropTypes.string.isRequired,\r\n  onLoad: PropTypes.func,\r\n  profile_image_url: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  facebook: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string.isRequired,\r\n  instagram: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  card_id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExtendedCardComponent;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport \"./ProfileCard.scss\";\r\nimport ExtendedCardComponent from \"./ExtendedCardComponent/ExtendedCardComponent\";\r\n\r\nfunction ProfileCard() {\r\n  const { id: userId } = useParams();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const cardResponse = await axios.get(`https://${process.env.REACT_APP_HOST}:4001/api/${userId}/cards`);\r\n        const cardData = cardResponse.data;\r\n        \r\n        console.log(\"Card Data:\", cardData); // Add this line\r\n  \r\n        if (cardResponse.status === 200) {\r\n          setCards(cardData.cards || []);\r\n        } else {\r\n          console.error(cardData.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [userId, setCards]);\r\n  console.log(cards);\r\n  return (\r\n    <div className=\"profile-card-container\">\r\n      <div>\r\n      <h1 className=\"profile-title\">PICK A CARD</h1>\r\n      </div>\r\n    {cards.map((card) => {\r\n  return <ExtendedCardComponent key={card.card_id} {...card} />;\r\n})}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n"],"names":["_ref","email","card_id","phone","username","company","title","onLoad","facebook","linkedin","instagram","url","profile_image_url","loading","setLoading","useState","imageUrl","setImageUrl","userData","setUserData","id","userId","useParams","useEffect","async","response","fetch","concat","data","err","console","log","fetchUserdata","encodeURIComponent","ok","Error","status","blob","URL","createObjectURL","error","fetchImage","_jsx","class","children","_jsxs","src","cards","setCards","cardResponse","axios","get","process","cardData","message","fetchData","className","map","card","ExtendedCardComponent"],"sourceRoot":""}