{"version":3,"file":"static/js/570.314e4818.chunk.js","mappings":"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","sources":["pages/Dashboard/Cards/Cards.js","pages/Dashboard/Components/Header.js","pages/Dashboard/Overview/Components/ContactComponent.js","pages/Dashboard/Overview/Overview.js","pages/Dashboard/dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport './Cards.scss';\r\nimport Header from '../Components/Header';\r\nimport CardComponent from '../../Card/CardComponent/CardComponent';\r\nimport CreateCard from '../CreateCard/CreateCard';\r\n\r\nfunction Cards() {\r\n  const { id: userId } = useParams();\r\n  const [userData, setUserData] = useState(null); // Initialize as null\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submissionSuccess, setSubmissionSuccess]= useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if the session_token cookie exists\r\n    const sessionToken = Cookie.get('session_token');\r\n\r\n    if (!sessionToken) {\r\n      // Redirect to the login page if the cookie does not exist\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard/cards`, { withCredentials: true })\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setCards(response.data.cards);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cards:', error);\r\n        if (error.response && error.response.status === 400) {\r\n          // If the response status is 400, render the CreateCard component\r\n          setUserData({}); // Set userData to an empty object to trigger rendering of CreateCard\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        } else {\r\n          // Handle other errors here\r\n          setLoading(false); // Set loading to false to stop spinner\r\n        }\r\n        \r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      });\r\n  }, [userId, submissionSuccess]);\r\n\r\n  if (userData === null) {\r\n    // Check for userData to be null instead of !userData\r\n    return (\r\n      <div className=\"cards-container\">\r\n        <Header />\r\n        {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n        <div className=\"nav-tiles\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <Header />\r\n      {loading && <div className=\"spinner-container\"><div className=\"spinner\"></div></div>}\r\n      {Object.keys(userData).length === 0 ? <CreateCard setSubmissionSuccess={setSubmissionSuccess} /> : null}\r\n      <div className=\"nav-tiles\">\r\n        <div className=\"tiles\">\r\n          {!loading &&\r\n            cards.map((card) => <CardComponent key={card.card_id} {...card} />)\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","  import React, { useEffect, useState, useRef } from 'react';\r\n  import './Header.scss';\r\n  import MenuIcon from '@mui/icons-material/Menu';\r\n  import { useParams, useNavigate } from 'react-router-dom';\r\n  import CloseIcon from '@mui/icons-material/Close';\r\n\r\n  function Header(props, event) {\r\n    const { activeTab } = props;\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const isMobile = window.innerWidth <= 1000;\r\n    const menuRef = useRef(null);\r\n    const username = localStorage.getItem('username');\r\n    const profile_picture = localStorage.getItem('profile_image_url');\r\n\r\n    useEffect(() => {\r\n      const handleOutsideClick = (event) => {\r\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      const handleSwipe = (event) => {\r\n        const startX = event.changedTouches[0].clientX;\r\n        const endX = event.changedTouches[event.changedTouches.length - 1].clientX;\r\n\r\n        if (startX - endX > 50) {\r\n          // Swipe left (closing the menu)\r\n          setMenuOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('click', handleOutsideClick);\r\n      document.addEventListener('touchend', handleSwipe);\r\n\r\n      return () => {\r\n        document.removeEventListener('click', handleOutsideClick);\r\n        document.removeEventListener('touchend', handleSwipe);\r\n      };\r\n    }, []);\r\n\r\n    const handleMenuClick = () => {\r\n      setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    function handleTabClick (tab) {\r\n      setMenuOpen(false);\r\n      navigate(`/${id}/dashboard/${tab}`);\r\n    };\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <header className={`dashboard-header ${isMenuOpen ? 'menu-open' : ''}`}>\r\n          <div className=\"dashboard-header-logo\">\r\n            <div className=\"dashboard-logo\">\r\n              <span className=\"dashboard-logo-icon\">\r\n                <img src=\"https://res.cloudinary.com/dnho57ne8/image/upload/v1699913993/brava_fqk4h4.png\" alt=\"Logo\" />\r\n              </span>\r\n              <h1 className=\"logo-title\">Brava</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-header-navigation\">\r\n            <div className=\"tabs\">\r\n            <button onClick={(event) => handleTabClick('overview', event)} className={activeTab === 'overview' ? 'active' : ''}>\r\n            <a>Overview</a>\r\n          </button>\r\n          <button onClick={(event) => handleTabClick('cards', event)} className={activeTab === 'cards' ? 'active' : ''}>\r\n           <a> Cards</a>\r\n          </button>\r\n          <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n           <a>Account</a> \r\n          </button>\r\n          <button>\r\n            <a href=\"https://bravanfc.com\" >Store</a>\r\n          </button>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-header-actions\">\r\n            <button onClick={() => handleTabClick('account')} className=\"user-profile\">\r\n              <span>{username}</span>\r\n              <span>\r\n                <img src={profile_picture} alt=\"User Avatar\" />\r\n              </span>\r\n            </button>\r\n          </div>\r\n          {isMobile && (\r\n            <div>\r\n              <div className=\"dashboard-header-mobile\">\r\n                <MenuIcon onClick={handleMenuClick} />\r\n              </div>\r\n              <div className={`mobile-menu ${isMenuOpen ? 'open' : ''}`}>\r\n                {isMenuOpen && <CloseIcon onClick={handleMenuClick} />}\r\n                <button onClick={(event) => handleTabClick('overview', event)} className={activeTab === 'overview' ? 'active' : ''}>\r\n                  Overview\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('cards', event)} className={activeTab === 'cards' ? 'active' : ''}>\r\n                  Cards\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n                  Account\r\n                </button>\r\n                <button onClick={(event) => handleTabClick('account', event)} className={activeTab === 'account' ? 'active' : ''}>\r\n                  Store\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Header;\r\n","import React from 'react'\r\nimport './ContactComponent.scss'\r\n\r\n\r\n\r\n function ContactComponent({user_id, contact_id, name, company, email, message,contact_date}) {\r\n    const isMobile = window.innerWidth <= 1000;\r\n\r\n   \r\n  return (\r\n    <div>\r\n        \r\n    <div className=\"contacts\">\r\n        <div className=\"contact\">\r\n        {!isMobile && <img src=\"https://cdn.shopify.com/s/files/1/0733/7767/7577/files/profile_2.png?v=1712073839\"/>  }\r\n        {isMobile && (\r\n              <div>\r\n                <dt>Contact Date</dt>\r\n                <dd>{contact_date}</dd>\r\n              </div>\r\n            )}\r\n            <dl className=\"contact-details\">\r\n                <div>\r\n                    <dt>{name}, {company}</dt>\r\n                </div>\r\n                \r\n                <div>\r\n                    \r\n                    <dd>{email}</dd>\r\n                </div>\r\n                {!isMobile && (\r\n              <div>\r\n                <dd>{contact_date}</dd>\r\n              </div>\r\n            )}\r\n                 <div className={`contact-message ${isMobile ? 'full-width-message' : ''}`}>\r\n                  <dt>{message}</dt>\r\n                </div>\r\n            </dl>\r\n           {/*<div className=\"reply\">\r\n                <button>Responder</button> \r\n                </div>*/}\r\n        </div>\r\n       \r\n       \r\n    </div>\r\n</div>\r\n  )\r\n}\r\nexport default ContactComponent","import React, {useState, useEffect} from 'react';\r\nimport { useParams, useNavigate} from 'react-router';\r\nimport \"./Overview.scss\"\r\nimport ContactComponent from './Components/ContactComponent';\r\nimport axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\n\r\nconst OverviewContent = ({  contactData}) => {\r\n\tconst host = process.env.REACT_APP_HOST;\r\n\tconst isMobile = window.innerWidth <= 1000;\r\n\tconst navigate = useNavigate();\r\n\tconst [userId, setUserId] = useState(0);\r\n\tconst contactCounter = contactData ? contactData.length : 0;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (contactData && contactData.length > 0) {\r\n\t\t  setUserId(contactData[0].user_id);\r\n\t\t}\r\n\t  }, [contactData]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst sessionToken = Cookie.get('session_token');\r\n\t\tif (!sessionToken) {\r\n\t\t  navigate('/login');\r\n\t\t}\r\n\t  }, [navigate]);\r\n\t\r\n\r\n  return (\r\n    <div>\r\n\t\t<div className=\"overview\">\r\n\t<div className=\"overview-body\">\r\n\t\t<div className=\"overview-body-navigation\">\r\n\t\t{/*\t<nav className=\"navigation\">\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t<i className=\"ph-browsers\"></i>\r\n\t\t\t\t\t<span>Analytics </span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t<i className=\"ph-check-square\"></i>\r\n\t\t\t\t\t<span>Cards</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t<i className=\"ph-swap\"></i>\r\n\t\t\t\t\t<span>Profile</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t<i className=\"ph-file-text\"></i>\r\n\t\t\t\t\t<span>Help Center</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t<i className=\"ph-globe\"></i>\r\n\t\t\t\t\t<span>Sharing</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t\r\n  </nav> */\t}\r\n   \t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<div className=\"overview-body-main-content\">\r\n\t\t\t{/*<section className=\"service-section\">\r\n\t\t\t\t<h2>Este mês</h2>\r\n\t\t\t\t<div className=\"service-section-header\">\r\n\t\t\t\t\t<div className=\"search-field\">\r\n\t\t\t\t\t\t<i className=\"ph-magnifying-glass\"></i>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Account number\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"dropdown-field\">\r\n\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option>Home</option>\r\n\t\t\t\t\t\t\t<option>Work</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<i className=\"ph-caret-down\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"flat-button\">\r\n\t\t\t\t\t\tSearch\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mobile-only\">\r\n\t\t\t\t\t<button className=\"flat-button\">\r\n\t\t\t\t\t\tToggle search\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"service-section-footer\">\r\n\t\t\t\t\t<p>Services are paid according to the current state of the currency and tariff.</p>\r\n\t\t\t\t</div>\r\n</section> */}\t\r\n\t\t\t<section className=\"contact-section\">\r\n\t\t\t{isMobile && (\r\n              <div className='gen-leads'>\r\n                <h2 >GENERATED LEADS: </h2>\r\n\t\t\t\t<div className='contact-counter'>{contactCounter}</div>\r\n              </div>\r\n            )}\r\n\t\t\t<div className=\"contact-section-header\">\r\n\t\t\t\t<h2>Latest Leads</h2>\r\n\t\t\t\t{/*<div className=\"filter-options\">\r\n\t\t\t\t\t<p>Filter selected: more than 100 $</p>\r\n\t\t\t\t\t<button className=\"icon-button\">\r\n\t\t\t\t\t\t<i className=\"ph-funnel\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"icon-button\">\r\n\t\t\t\t\t\t<i className=\"ph-plus\"></i>\r\n\t\t\t\t\t</button>\r\n</div> */}\r\n\t\t\t</div>\r\n\t\t\t<div className='contact-description'>\r\n\t\t\t\t<h1>Information</h1>\r\n\t\t\t\t<h1>Email</h1>\r\n\t\t\t\t<h1>Contact Date</h1>\r\n\t\t\t\t<h1>Email</h1>\r\n\t\t\t</div>\r\n\t\t\t{contactData ? (\r\n\t\t\t\tcontactData.map((contact) => (\r\n\t\t\t\t<ContactComponent\r\n\t\t\t\t\tkey={contact.contact_id}\r\n\t\t\t\t\tname={contact.name}\r\n\t\t\t\t\temail={contact.email}\r\n\t\t\t\t\tcompany={contact.company}\r\n\t\t\t\t\tcontact_date={contact.contact_date}\r\n\t\t\t\t\tmessage={contact.message}\r\n\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<p>Loading...</p>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t\t<div className=\"overview-body-sidebar\">\r\n\t\t\t<section className=\"payment-section\">\r\n\t\t\t{!isMobile && (<div><h2>GENERATED LEADS: </h2>\r\n\t\t\t\t<div className='contact-counter'>{contactCounter}</div></div>)}\r\n\t\t\t\t<div className=\"payment-section-header\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t{/*<div className=\"payments\">\r\n\t\t\t\t\t<div className=\"payment\">\r\n\t\t\t\t\t\t<div className=\"profile-card green\">\r\n\t\t\t\t\t\t\t<span>01/22</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t•••• 4012\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"payment-details\">\r\n\t\t\t\t\t\t\t<h3>Internet</h3>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>$ 2,110</span>\r\n\t\t\t\t\t\t\t\t<button className=\"icon-button\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"ph-caret-right-bold\"></i>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"payment\">\r\n\t\t\t\t\t\t<div className=\"profile-card olive\">\r\n\t\t\t\t\t\t\t<span>12/23</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t•••• 2228\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"payment-details\">\r\n\t\t\t\t\t\t\t<h3>Universal</h3>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>$ 5,621</span>\r\n\t\t\t\t\t\t\t\t<button className=\"icon-button\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"ph-caret-right-bold\"></i>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"payment\">\r\n\t\t\t\t\t\t<div className=\"profile-card gray\">\r\n\t\t\t\t\t\t\t<span>03/22</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t•••• 5214\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"payment-details\">\r\n\t\t\t\t\t\t\t<h3>Gold</h3>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>$ 3,473</span>\r\n\t\t\t\t\t\t\t\t<button className=\"icon-button\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"ph-caret-right-bold\"></i>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n</div>\r\n\t\t\t\t<div className=\"faq\">\r\n\t\t\t\t\t<p>Most frequently asked questions</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label>Question</label>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Type here\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"payment-section-footer\">\r\n\t\t\t\t\t<button className=\"save-button\">\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"settings-button\">\r\n\t\t\t\t\t\t<i className=\"ph-gear\"></i>\r\n\t\t\t\t\t\t<span>More settings</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t*/}\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t</div>\r\n</div></div>\r\n  );\r\n};\r\n\r\nexport default OverviewContent;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './dashboard.scss';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from './Components/Header';\r\nimport OverviewContent from './Overview/Overview';\r\nimport Cards from './Cards/Cards';\r\nimport Cookie from 'js-cookie';\r\n\r\nexport function Dashboard(event) {\r\n \r\n  const { id: userId } = useParams();\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate();\r\n  const isDataFetched = useRef(false); // Ref to track if data fetching is done\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const sessionToken = Cookie.get('session_token');\r\n        \r\n        if (!sessionToken) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n  \r\n        const response = await axios.get(`https://${process.env.REACT_APP_HOST}/api/${userId}/dashboard`, { withCredentials: true });\r\n        setUserData(response.data);\r\n        console.log('Response data:', response.data);\r\n  \r\n        // Set local storage items after setting userData\r\n        if (response.data && response.data.length > 0) {\r\n          localStorage.setItem('profile_image_url', response.data[0]?.profile_image_url);\r\n          localStorage.setItem('username', response.data[0]?.username);\r\n        }\r\n        \r\n        isDataFetched.current = true; // Set to true after data fetching\r\n      } catch (error) {\r\n        console.log('Error fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    // Fetch data only if userId is available and data fetching is not done yet\r\n    if (userId && !isDataFetched.current) {\r\n      console.log('making request');\r\n      fetchData();\r\n    }\r\n  }, [userId, navigate]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the header and tabs */}\r\n      <Header header_username={userData ? userData[0]?.username : ''} profile_picture={userData ? userData[0]?.profile_image_url:''} activeTab={activeTab} onTabClick={handleTabClick} />\r\n      <div className=\"dashboard-body\">\r\n        {/* Render content based on the active tab */}\r\n        {activeTab === 'overview' && <OverviewContent contactData={userData} />}\r\n        {activeTab === 'cards' && <Cards contactData={userData} />}\r\n        {/* Add other tab content here */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["id","userId","useParams","userData","setUserData","useState","cards","setCards","loading","setLoading","submissionSuccess","setSubmissionSuccess","navigate","useNavigate","useEffect","Cookie","get","axios","concat","process","withCredentials","then","response","data","catch","error","console","status","finally","_jsxs","className","children","_jsx","Header","Object","keys","length","CreateCard","map","card","CardComponent","card_id","props","event","activeTab","isMenuOpen","setMenuOpen","isMobile","window","innerWidth","menuRef","useRef","username","localStorage","getItem","profile_picture","handleOutsideClick","current","contains","target","handleSwipe","changedTouches","clientX","document","addEventListener","removeEventListener","handleMenuClick","handleTabClick","tab","src","alt","onClick","href","MenuIcon","CloseIcon","_ref","user_id","contact_id","name","company","email","message","contact_date","contactData","setUserId","contactCounter","contact","ContactComponent","Dashboard","_userData$","_userData$2","setActiveTab","isDataFetched","log","async","_response$data$","_response$data$2","setItem","profile_image_url","fetchData","header_username","onTabClick","OverviewContent","Cards"],"sourceRoot":""}